;;; cus-load.el --- automatically extracted custom dependencies  -*- lexical-binding: t -*-
;;
;;; Code:

(put '5x5 'custom-loads '(5x5))
(put 'LaTeX 'custom-loads '(reftex-vars))
(put 'PostScript 'custom-loads '(ps-mode))
(put 'PostScript-edit 'custom-loads '(ps-mode))
(put 'PostScript-interaction 'custom-loads '(ps-mode))
(put 'SQL 'custom-loads '(sql))
(put 'abbrev 'custom-loads '(dabbrev expand hippie-exp quickurl))
(put 'abbrev-mode 'custom-loads '(mailabbrev))
(put 'advice 'custom-loads '(advice))
(put 'align 'custom-loads '(align))
(put 'allout 'custom-loads '(allout allout-widgets))
(put 'allout-encryption 'custom-loads '(allout))
(put 'allout-keybindings 'custom-loads '(allout))
(put 'allout-widgets 'custom-loads '(allout-widgets))
(put 'allout-widgets-developer 'custom-loads '(allout-widgets))
(put 'ange-ftp 'custom-loads '(ange-ftp))
(put 'animate 'custom-loads '(animate))
(put 'ansi-colors 'custom-loads '(ansi-color))
(put 'antlr 'custom-loads '(antlr-mode))
(put 'applications 'custom-loads '(calc calculator calendar cus-edit doc-view erc eshell htmlfontify ispell mpc newst-backend package rcirc ses))
(put 'appt 'custom-loads '(appt))
(put 'apropos 'custom-loads '(apropos))
(put 'archive 'custom-loads '(arc-mode))
(put 'archive-7z 'custom-loads '(arc-mode))
(put 'archive-arc 'custom-loads '(arc-mode))
(put 'archive-lzh 'custom-loads '(arc-mode))
(put 'archive-squashfs 'custom-loads '(arc-mode))
(put 'archive-zip 'custom-loads '(arc-mode))
(put 'archive-zoo 'custom-loads '(arc-mode))
(put 'artist 'custom-loads '(artist))
(put 'artist-text 'custom-loads '(artist))
(put 'asm 'custom-loads '(asm-mode))
(put 'auth-source 'custom-loads '(auth-source auth-source-pass))
(put 'auth-source-pass 'custom-loads '(auth-source-pass))
(put 'auto-insert 'custom-loads '(autoinsert))
(put 'auto-revert 'custom-loads '(autorevert))
(put 'avoid 'custom-loads '(avoid))
(put 'backtrace 'custom-loads '(backtrace))
(put 'basic-faces 'custom-loads '(cus-edit shadowfile tab-line))
(put 'bat-mode 'custom-loads '(bat-mode))
(put 'battery 'custom-loads '(battery))
(put 'bib 'custom-loads '(bib-mode))
(put 'bibtex 'custom-loads '(bibtex bibtex-style))
(put 'bibtex-autokey 'custom-loads '(bibtex))
(put 'binhex 'custom-loads '(binhex))
(put 'bookmark 'custom-loads '(bookmark man))
(put 'browse-url 'custom-loads '(browse-url webjump))
(put 'bs 'custom-loads '(bs))
(put 'bs-appearance 'custom-loads '(bs))
(put 'bubbles 'custom-loads '(bubbles))
(put 'bug-reference 'custom-loads '(bug-reference))
(put 'bytecomp 'custom-loads '(bytecomp))
(put 'c 'custom-loads '(cc-fonts cc-guess cc-vars cmacexp cpp hideif semantic/bovine/c))
(put 'c-macro 'custom-loads '(cmacexp))
(put 'calc 'custom-loads '(calc))
(put 'calculator 'custom-loads '(calculator))
(put 'calendar 'custom-loads '(appt cal-china cal-dst cal-html cal-tex cal-x calendar diary-lib holidays icalendar lunar midnight org solar todo-mode))
(put 'calendar-chinese 'custom-loads '(cal-china))
(put 'calendar-dst 'custom-loads '(cal-dst))
(put 'calendar-faces 'custom-loads '(calendar diary-lib))
(put 'calendar-hooks 'custom-loads '(cal-x calendar))
(put 'calendar-html 'custom-loads '(cal-html))
(put 'calendar-tex 'custom-loads '(cal-tex))
(put 'canlock 'custom-loads '(canlock))
(put 'cedet 'custom-loads '(cedet-cscope cedet-global cedet-idutils))
(put 'cfengine 'custom-loads '(cfengine))
(put 'change-log 'custom-loads '(add-log))
(put 'check-declare 'custom-loads '(check-declare))
(put 'checkdoc 'custom-loads '(checkdoc))
(put 'chistory 'custom-loads '(chistory))
(put 'cmuscheme 'custom-loads '(cmuscheme))
(put 'columns 'custom-loads '(delim-col))
(put 'comint 'custom-loads '(comint))
(put 'comint-completion 'custom-loads '(comint))
(put 'comm 'custom-loads '(ange-ftp browse-url bug-reference dbus dig eudc-vars gnutls goto-addr gravatar kermit ldap net-utils netrc nsm ntlm tramp url-vars))
(put 'comp 'custom-loads '(comp))
(put 'compare-windows 'custom-loads '(compare-w))
(put 'compilation 'custom-loads '(compile))
(put 'completion 'custom-loads '(completion))
(put 'conf 'custom-loads '(conf-mode))
(put 'convenience 'custom-loads '(autoinsert autorevert bs completion cua-base cus-edit dabbrev delim-col display-fill-column-indicator display-line-numbers emacs-lock erc-status-sidebar ffap filecache filesets follow hippie-exp hl-line ibuffer ido imenu kmacro linum org-protocol repeat reveal ruler-mode so-long speedbar tab-line vcursor whitespace windmove))
(put 'cookie 'custom-loads '(cookie1))
(put 'copyright 'custom-loads '(copyright))
(put 'cperl 'custom-loads '(cperl-mode))
(put 'cperl-affected-by-hairy 'custom-loads '(cperl-mode))
(put 'cperl-autoinsert-details 'custom-loads '(cperl-mode))
(put 'cperl-faces 'custom-loads '(cperl-mode))
(put 'cperl-help-system 'custom-loads '(cperl-mode))
(put 'cperl-indentation-details 'custom-loads '(cperl-mode))
(put 'cperl-speed 'custom-loads '(cperl-mode))
(put 'cpp 'custom-loads '(cpp))
(put 'css 'custom-loads '(css-mode less-css-mode))
(put 'cua 'custom-loads '(cua-base))
(put 'custom-browse 'custom-loads '(cus-edit))
(put 'custom-buffer 'custom-loads '(cus-edit cus-theme))
(put 'custom-faces 'custom-loads '(cus-edit eieio-custom))
(put 'custom-magic-faces 'custom-loads '(cus-edit))
(put 'custom-menu 'custom-loads '(cus-edit))
(put 'customize 'custom-loads '(cus-edit wid-edit))
(put 'cwarn 'custom-loads '(cwarn))
(put 'dabbrev 'custom-loads '(dabbrev))
(put 'data 'custom-loads '(arc-mode conf-mode dns-mode doc-view epg-config forms generic-x hexl remember saveplace snmp-mode sort tar-mode time-stamp timeclock))
(put 'data-debug 'custom-loads '(data-debug))
(put 'dcl 'custom-loads '(dcl-mode))
(put 'debug 'custom-loads '(debug))
(put 'debugger 'custom-loads '(debug))
(put 'decipher 'custom-loads '(decipher))
(put 'desktop 'custom-loads '(desktop))
(put 'development 'custom-loads '(cus-edit))
(put 'dframe 'custom-loads '(dframe))
(put 'diary 'custom-loads '(cal-hebrew calendar diary-lib))
(put 'dictionary 'custom-loads '(dictionary))
(put 'dictionary-proxy 'custom-loads '(dictionary))
(put 'diff 'custom-loads '(diff diff-mode))
(put 'diff-mode 'custom-loads '(diff-mode))
(put 'dig 'custom-loads '(dig net-utils))
(put 'dired 'custom-loads '(dired dired-aux dired-x find-dired ls-lisp wdired))
(put 'dired-faces 'custom-loads '(dired))
(put 'dired-keys 'custom-loads '(dired-x))
(put 'dired-mark 'custom-loads '(dired))
(put 'dired-x 'custom-loads '(dired-x))
(put 'dirtrack 'custom-loads '(dirtrack))
(put 'display 'custom-loads '(display-fill-column-indicator display-line-numbers face-remap))
(put 'display-line-numbers 'custom-loads '(display-line-numbers))
(put 'display-time 'custom-loads '(time))
(put 'dns-mode 'custom-loads '(dns-mode))
(put 'doc-view 'custom-loads '(doc-view))
(put 'docs 'custom-loads '(info makeinfo texinfo))
(put 'document 'custom-loads '(srecode/document))
(put 'dos-fns 'custom-loads '(dos-vars dos-w32))
(put 'double 'custom-loads '(double))
(put 'dunnet 'custom-loads '(dunnet))
(put 'ebnf-displacement 'custom-loads '(ebnf2ps))
(put 'ebnf-except 'custom-loads '(ebnf2ps))
(put 'ebnf-non-terminal 'custom-loads '(ebnf2ps))
(put 'ebnf-optimization 'custom-loads '(ebnf2ps))
(put 'ebnf-production 'custom-loads '(ebnf2ps))
(put 'ebnf-repeat 'custom-loads '(ebnf2ps))
(put 'ebnf-shape 'custom-loads '(ebnf2ps))
(put 'ebnf-special 'custom-loads '(ebnf2ps))
(put 'ebnf-syntactic 'custom-loads '(ebnf2ps))
(put 'ebnf-terminal 'custom-loads '(ebnf2ps))
(put 'ebnf2ps 'custom-loads '(ebnf2ps))
(put 'ebrowse 'custom-loads '(ebrowse))
(put 'ebrowse-faces 'custom-loads '(ebrowse))
(put 'ebrowse-member 'custom-loads '(ebrowse))
(put 'ebrowse-tree 'custom-loads '(ebrowse))
(put 'ecomplete 'custom-loads '(ecomplete))
(put 'ede 'custom-loads '(ede ede/base ede/linux ede/locate ede/make ede/project-am ede/simple))
(put 'edebug 'custom-loads '(edebug))
(put 'ediff 'custom-loads '(ediff ediff-diff ediff-init ediff-mult ediff-ptch ediff-wind))
(put 'ediff-diff 'custom-loads '(ediff-diff))
(put 'ediff-highlighting 'custom-loads '(ediff-init))
(put 'ediff-hook 'custom-loads '(ediff-init ediff-mult))
(put 'ediff-merge 'custom-loads '(ediff-init ediff-merg))
(put 'ediff-mult 'custom-loads '(ediff-mult))
(put 'ediff-ptch 'custom-loads '(ediff-ptch))
(put 'ediff-vers 'custom-loads '(ediff-vers))
(put 'ediff-window 'custom-loads '(ediff-help ediff-wind))
(put 'editing 'custom-loads '(cus-edit rect))
(put 'editing-basics 'custom-loads '(cua-base delsel))
(put 'edt 'custom-loads '(edt))
(put 'eieio 'custom-loads '(chart eieio-custom))
(put 'electric-help 'custom-loads '(ehelp))
(put 'electricity 'custom-loads '(elec-pair))
(put 'elide-head 'custom-loads '(elide-head))
(put 'elint 'custom-loads '(elint))
(put 'elp 'custom-loads '(elp))
(put 'emacs 'custom-loads '(cus-edit))
(put 'emacs-lock 'custom-loads '(emacs-lock))
(put 'emacsbug 'custom-loads '(emacsbug))
(put 'emerge 'custom-loads '(emerge))
(put 'emulations 'custom-loads '(cua-base edt viper))
(put 'enriched 'custom-loads '(enriched))
(put 'environment 'custom-loads '(cus-edit dired dos-vars ebnf2ps w32-vars))
(put 'epa 'custom-loads '(epa "epa-ks"))
(put 'epa-faces 'custom-loads '(epa))
(put 'epa-file 'custom-loads '(epa-file))
(put 'epa-ks 'custom-loads '("epa-ks"))
(put 'epa-mail 'custom-loads '(epa-mail))
(put 'epg 'custom-loads '(epa epg-config))
(put 'erc 'custom-loads '(erc erc-autoaway erc-button erc-capab erc-dcc erc-desktop-notifications erc-ezbounce erc-fill erc-goodies erc-ibuffer erc-identd erc-join erc-list erc-log erc-match erc-menu erc-netsplit erc-networks erc-notify erc-page erc-pcomplete erc-replace erc-ring erc-services erc-sound erc-speedbar erc-stamp erc-track erc-truncate))
(put 'erc-autoaway 'custom-loads '(erc-autoaway))
(put 'erc-autojoin 'custom-loads '(erc-join))
(put 'erc-buffers 'custom-loads '(erc))
(put 'erc-button 'custom-loads '(erc-button))
(put 'erc-capab 'custom-loads '(erc-capab))
(put 'erc-control-characters 'custom-loads '(erc-goodies))
(put 'erc-dcc 'custom-loads '(erc-dcc erc-xdcc))
(put 'erc-display 'custom-loads '(erc erc-goodies))
(put 'erc-ezbounce 'custom-loads '(erc-ezbounce))
(put 'erc-faces 'custom-loads '(erc erc-button erc-capab erc-goodies erc-match erc-stamp))
(put 'erc-fill 'custom-loads '(erc-fill))
(put 'erc-hooks 'custom-loads '(erc erc-netsplit))
(put 'erc-ibuffer 'custom-loads '(erc-ibuffer))
(put 'erc-identd 'custom-loads '(erc-identd))
(put 'erc-ignore 'custom-loads '(erc))
(put 'erc-log 'custom-loads '(erc-log))
(put 'erc-lurker 'custom-loads '(erc))
(put 'erc-match 'custom-loads '(erc-match))
(put 'erc-mode-line-and-header 'custom-loads '(erc))
(put 'erc-netsplit 'custom-loads '(erc-netsplit))
(put 'erc-networks 'custom-loads '(erc-networks))
(put 'erc-notifications 'custom-loads '(erc-desktop-notifications))
(put 'erc-notify 'custom-loads '(erc-notify))
(put 'erc-page 'custom-loads '(erc-page))
(put 'erc-paranoia 'custom-loads '(erc))
(put 'erc-pcomplete 'custom-loads '(erc-pcomplete))
(put 'erc-query 'custom-loads '(erc))
(put 'erc-quit-and-part 'custom-loads '(erc))
(put 'erc-replace 'custom-loads '(erc-replace))
(put 'erc-scripts 'custom-loads '(erc))
(put 'erc-server 'custom-loads '(erc-backend))
(put 'erc-server-hooks 'custom-loads '(erc))
(put 'erc-services 'custom-loads '(erc-services))
(put 'erc-sound 'custom-loads '(erc-sound))
(put 'erc-speedbar 'custom-loads '(erc-speedbar))
(put 'erc-spelling 'custom-loads '(erc-spelling))
(put 'erc-stamp 'custom-loads '(erc-stamp))
(put 'erc-status-sidebar 'custom-loads '(erc-status-sidebar))
(put 'erc-track 'custom-loads '(erc-track))
(put 'erc-truncate 'custom-loads '(erc-truncate))
(put 'ert 'custom-loads '(ert))
(put 'eshell 'custom-loads '(esh-arg esh-cmd esh-ext esh-io esh-mode esh-module esh-proc esh-util esh-var eshell))
(put 'eshell-alias 'custom-loads '(em-alias))
(put 'eshell-arg 'custom-loads '(esh-arg))
(put 'eshell-banner 'custom-loads '(em-banner))
(put 'eshell-basic 'custom-loads '(em-basic))
(put 'eshell-cmd 'custom-loads '(esh-cmd))
(put 'eshell-cmpl 'custom-loads '(em-cmpl))
(put 'eshell-dirs 'custom-loads '(em-dirs))
(put 'eshell-ext 'custom-loads '(esh-ext))
(put 'eshell-glob 'custom-loads '(em-glob))
(put 'eshell-hist 'custom-loads '(em-hist))
(put 'eshell-io 'custom-loads '(esh-io))
(put 'eshell-ls 'custom-loads '(em-ls))
(put 'eshell-mode 'custom-loads '(esh-mode))
(put 'eshell-module 'custom-loads '(em-alias em-banner em-basic em-cmpl em-dirs em-glob em-hist em-ls em-pred em-prompt em-rebind em-script em-smart em-term em-unix em-xtra esh-module))
(put 'eshell-pred 'custom-loads '(em-pred))
(put 'eshell-proc 'custom-loads '(esh-proc))
(put 'eshell-prompt 'custom-loads '(em-prompt))
(put 'eshell-rebind 'custom-loads '(em-rebind))
(put 'eshell-script 'custom-loads '(em-script))
(put 'eshell-smart 'custom-loads '(em-smart))
(put 'eshell-term 'custom-loads '(em-term))
(put 'eshell-unix 'custom-loads '(em-unix))
(put 'eshell-util 'custom-loads '(esh-util))
(put 'eshell-var 'custom-loads '(esh-var))
(put 'etags 'custom-loads '(etags speedbar))
(put 'etc-authors-mode 'custom-loads '(etc-authors-mode))
(put 'ethiopic 'custom-loads '(ethio-util))
(put 'eudc 'custom-loads '(eudc-vars))
(put 'eudc-bbdb 'custom-loads '(eudc-vars))
(put 'eudc-ldap 'custom-loads '(eudc-vars))
(put 'eudc-ph 'custom-loads '(eudc-vars))
(put 'eww 'custom-loads '(eww))
(put 'executable 'custom-loads '(executable))
(put 'expand 'custom-loads '(expand))
(put 'extensions 'custom-loads '(data-debug ede ido page-ext srecode time-stamp transient wid-edit))
(put 'external 'custom-loads '(bib-mode browse-url cus-edit ebnf2ps epg-config locate man server))
(put 'ezimage 'custom-loads '(ezimage))
(put 'f90 'custom-loads '(f90))
(put 'f90-indent 'custom-loads '(f90))
(put 'facemenu 'custom-loads '(facemenu))
(put 'faces 'custom-loads '(cus-edit cwarn dired facemenu gnus hi-lock hilit-chg message mh-e proced ps-print rcirc rst speedbar tab-line wid-edit woman))
(put 'feedmail 'custom-loads '(feedmail))
(put 'feedmail-debug 'custom-loads '(feedmail))
(put 'feedmail-headers 'custom-loads '(feedmail))
(put 'feedmail-misc 'custom-loads '(feedmail))
(put 'feedmail-queue 'custom-loads '(feedmail))
(put 'feedmail-spray 'custom-loads '(feedmail))
(put 'ff 'custom-loads '(find-file))
(put 'ffap 'custom-loads '(ffap))
(put 'file-cache 'custom-loads '(filecache))
(put 'fileloop 'custom-loads '(fileloop))
(put 'files 'custom-loads '(ange-ftp autoinsert autorevert cus-edit dired filecache latexenc plstore recentf shadowfile tramp))
(put 'filesets 'custom-loads '(filesets))
(put 'fill 'custom-loads '(align))
(put 'find-dired 'custom-loads '(find-dired))
(put 'find-file 'custom-loads '(find-file))
(put 'find-function 'custom-loads '(find-func))
(put 'flymake 'custom-loads '(flymake flymake-proc))
(put 'flymake-cc 'custom-loads '(flymake-cc))
(put 'flyspell 'custom-loads '(flyspell))
(put 'follow 'custom-loads '(follow))
(put 'font-lock 'custom-loads '(hi-lock prolog))
(put 'font-lock-highlighting-faces 'custom-loads '(ibuffer vera-mode verilog-mode))
(put 'footnote 'custom-loads '(footnote))
(put 'forms 'custom-loads '(forms))
(put 'fortran 'custom-loads '(fortran))
(put 'fortran-comment 'custom-loads '(fortran))
(put 'fortran-indent 'custom-loads '(fortran))
(put 'fortune 'custom-loads '(fortune))
(put 'fortune-signature 'custom-loads '(fortune))
(put 'frames 'custom-loads '(desktop ediff-wind imenu two-column))
(put 'games 'custom-loads '(5x5 animate bubbles cookie1 decipher dunnet fortune gametree gomoku handwrite hanoi life mpuz pong solitaire spook tetris))
(put 'gametree 'custom-loads '(gametree))
(put 'gdb 'custom-loads '(gdb-mi))
(put 'gdb-buffers 'custom-loads '(gdb-mi))
(put 'gdb-non-stop 'custom-loads '(gdb-mi))
(put 'generic-x 'custom-loads '(generic-x))
(put 'glasses 'custom-loads '(glasses))
(put 'gmm 'custom-loads '(gmm-utils))
(put 'gnus 'custom-loads '(auth-source deuglify gnus gnus-art gnus-async gnus-bookmark gnus-cloud gnus-delay gnus-demon gnus-diary gnus-dup gnus-eform gnus-notifications gnus-search gnus-sieve gnus-undo gnus-uu gnus-win mail-source mm-url nnimap nnmail nnmairix nnrss nnselect nntp spam-stat))
(put 'gnus-agent 'custom-loads '(gnus gnus-agent))
(put 'gnus-art 'custom-loads '(gnus-art gnus-html))
(put 'gnus-article 'custom-loads '(gnus-art gnus-cite gnus-icalendar gnus-mh))
(put 'gnus-article-buttons 'custom-loads '(gnus-art))
(put 'gnus-article-emphasis 'custom-loads '(gnus-art))
(put 'gnus-article-headers 'custom-loads '(gnus-art gnus-fun gnus-sum))
(put 'gnus-article-hiding 'custom-loads '(gnus-art gnus-cite gnus-sum))
(put 'gnus-article-highlight 'custom-loads '(gnus-art))
(put 'gnus-article-mime 'custom-loads '(gnus-art gnus-sum mm-uu))
(put 'gnus-article-saving 'custom-loads '(gnus gnus-art))
(put 'gnus-article-signature 'custom-loads '(gnus-art))
(put 'gnus-article-treat 'custom-loads '(gnus-art))
(put 'gnus-article-various 'custom-loads '(gnus-art gnus-sum nnheader))
(put 'gnus-article-washing 'custom-loads '(gnus-art))
(put 'gnus-asynchronous 'custom-loads '(gnus-async))
(put 'gnus-bookmark 'custom-loads '(gnus-bookmark))
(put 'gnus-cache 'custom-loads '(gnus gnus-cache))
(put 'gnus-charset 'custom-loads '(gnus gnus-group gnus-sum))
(put 'gnus-cite 'custom-loads '(gnus-cite gnus-msg))
(put 'gnus-cloud 'custom-loads '(gnus-cloud))
(put 'gnus-dbus 'custom-loads '(gnus gnus-dbus))
(put 'gnus-delay 'custom-loads '(gnus-delay))
(put 'gnus-demon 'custom-loads '(gnus-demon))
(put 'gnus-diary 'custom-loads '(gnus-diary nndiary))
(put 'gnus-dribble-file 'custom-loads '(gnus-start))
(put 'gnus-duplicate 'custom-loads '(gnus-dup))
(put 'gnus-edit-form 'custom-loads '(gnus-eform))
(put 'gnus-exit 'custom-loads '(gnus gnus-group))
(put 'gnus-extract 'custom-loads '(gnus gnus-uu))
(put 'gnus-extract-archive 'custom-loads '(gnus-uu))
(put 'gnus-extract-post 'custom-loads '(gnus-uu))
(put 'gnus-extract-view 'custom-loads '(gnus-sum gnus-uu))
(put 'gnus-files 'custom-loads '(gnus nnmail))
(put 'gnus-format 'custom-loads '(gnus-spec))
(put 'gnus-fun 'custom-loads '(gnus-fun))
(put 'gnus-gravatar 'custom-loads '(gnus-gravatar))
(put 'gnus-group 'custom-loads '(gnus gnus-group gnus-topic))
(put 'gnus-group-foreign 'custom-loads '(gnus-group gnus-msg))
(put 'gnus-group-icons 'custom-loads '(gnus-group))
(put 'gnus-group-levels 'custom-loads '(gnus gnus-group gnus-start))
(put 'gnus-group-listing 'custom-loads '(gnus-group))
(put 'gnus-group-new 'custom-loads '(gnus-start))
(put 'gnus-group-select 'custom-loads '(gnus gnus-group gnus-sum))
(put 'gnus-group-topic 'custom-loads '(gnus))
(put 'gnus-group-various 'custom-loads '(gnus gnus-group gnus-start))
(put 'gnus-group-visual 'custom-loads '(gnus gnus-group))
(put 'gnus-icalendar 'custom-loads '(gnus-icalendar))
(put 'gnus-icalendar-org 'custom-loads '(gnus-icalendar))
(put 'gnus-message 'custom-loads '(gnus gnus-draft gnus-msg message))
(put 'gnus-meta 'custom-loads '(gnus gnus-util))
(put 'gnus-newsrc 'custom-loads '(gnus-start))
(put 'gnus-notifications 'custom-loads '(gnus-notifications))
(put 'gnus-outlook-deuglify 'custom-loads '(deuglify))
(put 'gnus-picon 'custom-loads '(gnus-art gnus-picon))
(put 'gnus-registry 'custom-loads '(gnus-registry))
(put 'gnus-score 'custom-loads '(gnus score-mode))
(put 'gnus-score-adapt 'custom-loads '(gnus gnus-score))
(put 'gnus-score-decay 'custom-loads '(gnus-score))
(put 'gnus-score-default 'custom-loads '(gnus-score gnus-sum))
(put 'gnus-score-expire 'custom-loads '(gnus-kill gnus-score))
(put 'gnus-score-files 'custom-loads '(gnus gnus-score))
(put 'gnus-score-kill 'custom-loads '(gnus gnus-kill))
(put 'gnus-score-various 'custom-loads '(gnus gnus-score))
(put 'gnus-search 'custom-loads '(gnus-search))
(put 'gnus-server 'custom-loads '(gnus gnus-int gnus-srvr nnheader))
(put 'gnus-server-visual 'custom-loads '(gnus-srvr))
(put 'gnus-sieve 'custom-loads '(gnus-sieve))
(put 'gnus-start 'custom-loads '(gnus gnus-group gnus-int gnus-start gnus-util nnheader))
(put 'gnus-start-server 'custom-loads '(gnus-start))
(put 'gnus-summary 'custom-loads '(gnus gnus-sum))
(put 'gnus-summary-choose 'custom-loads '(gnus-sum))
(put 'gnus-summary-exit 'custom-loads '(gnus gnus-sum))
(put 'gnus-summary-format 'custom-loads '(gnus gnus-diary gnus-sum))
(put 'gnus-summary-mail 'custom-loads '(gnus-sum))
(put 'gnus-summary-maneuvering 'custom-loads '(gnus-sum))
(put 'gnus-summary-marks 'custom-loads '(gnus gnus-sum))
(put 'gnus-summary-pick 'custom-loads '(gnus-salt))
(put 'gnus-summary-sort 'custom-loads '(gnus-sum))
(put 'gnus-summary-tree 'custom-loads '(gnus-salt))
(put 'gnus-summary-various 'custom-loads '(gnus-sum))
(put 'gnus-summary-visual 'custom-loads '(gnus-sum))
(put 'gnus-thread 'custom-loads '(gnus-group gnus-sum))
(put 'gnus-threading 'custom-loads '(gnus-sum))
(put 'gnus-topic 'custom-loads '(gnus-topic))
(put 'gnus-undo 'custom-loads '(gnus-undo))
(put 'gnus-various 'custom-loads '(gnus gnus-sum gnus-util))
(put 'gnus-visual 'custom-loads '(gnus gnus-art gnus-gravatar smiley))
(put 'gnus-windows 'custom-loads '(gnus-win))
(put 'gnus-xmas 'custom-loads '(gnus))
(put 'gnutls 'custom-loads '(gnutls))
(put 'gomoku 'custom-loads '(gomoku))
(put 'goto-address 'custom-loads '(goto-addr))
(put 'gravatar 'custom-loads '(gravatar))
(put 'grep 'custom-loads '(grep))
(put 'gud 'custom-loads '(gdb-mi gud))
(put 'handwrite 'custom-loads '(handwrite))
(put 'hanoi 'custom-loads '(hanoi))
(put 'hardware 'custom-loads '(battery))
(put 'hashcash 'custom-loads '(hashcash))
(put 'help 'custom-loads '(apropos cus-edit ehelp help-at-pt help-fns help-macro help-mode info info-look man tutorial woman))
(put 'help-at-pt 'custom-loads '(help-at-pt))
(put 'hexl 'custom-loads '(hexl))
(put 'hi-lock 'custom-loads '(hi-lock))
(put 'hi-lock-faces 'custom-loads '(hi-lock))
(put 'hide-ifdef 'custom-loads '(hideif))
(put 'hideshow 'custom-loads '(hideshow))
(put 'highlight-changes 'custom-loads '(hilit-chg))
(put 'hippie-expand 'custom-loads '(hippie-exp))
(put 'hl-line 'custom-loads '(hl-line))
(put 'holidays 'custom-loads '(calendar holidays))
(put 'htmlfontify 'custom-loads '(htmlfontify))
(put 'hypermedia 'custom-loads '(dictionary))
(put 'i18n 'custom-loads '(cus-edit double iso-ascii latin1-disp ogonek url-vars))
(put 'ibuffer 'custom-loads '(ibuf-ext ibuffer))
(put 'icalendar 'custom-loads '(icalendar))
(put 'icomplete 'custom-loads '(icomplete))
(put 'icon 'custom-loads '(icon))
(put 'idlwave 'custom-loads '(idlw-help idlw-shell idlwave))
(put 'idlwave-abbrev-and-indent-action 'custom-loads '(idlwave))
(put 'idlwave-code-formatting 'custom-loads '(idlwave))
(put 'idlwave-completion 'custom-loads '(idlwave))
(put 'idlwave-documentation 'custom-loads '(idlwave))
(put 'idlwave-external-programs 'custom-loads '(idlwave))
(put 'idlwave-misc 'custom-loads '(idlwave))
(put 'idlwave-online-help 'custom-loads '(idlw-help))
(put 'idlwave-routine-info 'custom-loads '(idlwave))
(put 'idlwave-shell-command-setup 'custom-loads '(idlw-shell))
(put 'idlwave-shell-general-setup 'custom-loads '(idlw-shell idlwave))
(put 'idlwave-shell-highlighting-and-faces 'custom-loads '(idlw-shell))
(put 'ido 'custom-loads '(ido))
(put 'ielm 'custom-loads '(ielm))
(put 'iimage 'custom-loads '(iimage))
(put 'image 'custom-loads '(iimage image-converter image-file image-mode))
(put 'image-dired 'custom-loads '(image-dired))
(put 'imap 'custom-loads '(imap))
(put 'imenu 'custom-loads '(imenu semantic/imenu))
(put 'inferior-lisp 'custom-loads '(inf-lisp))
(put 'info 'custom-loads '(info))
(put 'info-lookup 'custom-loads '(info-look))
(put 'info-xref 'custom-loads '(info-xref))
(put 'internal 'custom-loads '(cus-edit etc-authors-mode))
(put 'isearch 'custom-loads '(char-fold misearch))
(put 'isearchb 'custom-loads '(isearchb))
(put 'iso-ascii 'custom-loads '(iso-ascii))
(put 'ispell 'custom-loads '(flyspell ispell))
(put 'iswitchb 'custom-loads '(isearchb))
(put 'jka-compr 'custom-loads '(jka-compr))
(put 'js 'custom-loads '(js))
(put 'kermit 'custom-loads '(kermit))
(put 'keyboard 'custom-loads '(autoarg chistory keypad kmacro type-break))
(put 'kmacro 'custom-loads '(edmacro kmacro))
(put 'languages 'custom-loads '(antlr-mode asm-mode bat-mode cfengine cperl-mode css-mode cus-edit dcl-mode ethio-util f90 fortran hideshow icon idlwave info-look js ld-script m4-mode meta-mode modula2 nxml-mode octave opascal pascal perl-mode prolog ps-mode python rng-valid ruby-mode sgml-mode sh-script sieve simula smie sql tcl vera-mode verilog-mode vhdl-mode))
(put 'latin1-display 'custom-loads '(latin1-disp))
(put 'lazy-highlight 'custom-loads '(ispell))
(put 'ld-script 'custom-loads '(ld-script))
(put 'ldap 'custom-loads '(ldap))
(put 'leim 'custom-loads '(quail))
(put 'less-css 'custom-loads '(less-css-mode))
(put 'life 'custom-loads '(life))
(put 'linum 'custom-loads '(linum))
(put 'lisp 'custom-loads '(advice backtrace bytecomp checkdoc cl-indent comp edebug elp ert find-func gmm-utils ielm inf-lisp pp profiler re-builder scheme shadow shortdoc testcover trace unsafep warnings xscheme))
(put 'lisp-indent 'custom-loads '(cl-indent))
(put 'lisp-mnt 'custom-loads '(lisp-mnt))
(put 'lisp-shadow 'custom-loads '(shadow))
(put 'local 'custom-loads '(holidays))
(put 'locate 'custom-loads '(locate))
(put 'log-edit 'custom-loads '(log-edit))
(put 'log-view 'custom-loads '(log-view))
(put 'lpr 'custom-loads '(lpr))
(put 'ls-lisp 'custom-loads '(ls-lisp))
(put 'm4 'custom-loads '(m4-mode))
(put 'mail 'custom-loads '(binhex ecomplete emacsbug eudc-vars feedmail fortune gnus gnus-dired hashcash imap mail-extr mail-hist mail-utils mailalias mailclient mairix message mh-e mm-decode mspools pop3 rfc2047 rmail sendmail sieve-manage smtpmail spam spam-report supercite time uce uudecode))
(put 'mail-abbrev 'custom-loads '(mailabbrev))
(put 'mail-extr 'custom-loads '(mail-extr))
(put 'mail-hist 'custom-loads '(mail-hist))
(put 'mail-source 'custom-loads '(mail-source nndiary pop3))
(put 'mailalias 'custom-loads '(mailalias))
(put 'mailcap 'custom-loads '(mailcap))
(put 'maint 'custom-loads '(elint emacsbug lisp-mnt))
(put 'mairix 'custom-loads '(mairix))
(put 'makefile 'custom-loads '(make-mode))
(put 'makeinfo 'custom-loads '(makeinfo))
(put 'man 'custom-loads '(man))
(put 'matching 'custom-loads '(bookmark completion ffap imenu))
(put 'menu 'custom-loads '(cus-edit tmm))
(put 'message 'custom-loads '(footnote message mml mml-sec))
(put 'message-buffers 'custom-loads '(message))
(put 'message-faces 'custom-loads '(message))
(put 'message-forwarding 'custom-loads '(message))
(put 'message-headers 'custom-loads '(message nndraft))
(put 'message-insertion 'custom-loads '(message))
(put 'message-interface 'custom-loads '(message))
(put 'message-mail 'custom-loads '(message))
(put 'message-news 'custom-loads '(message))
(put 'message-sending 'custom-loads '(message))
(put 'message-various 'custom-loads '(message))
(put 'meta-font 'custom-loads '(meta-mode))
(put 'mh-alias 'custom-loads '(mh-alias mh-e))
(put 'mh-e 'custom-loads '(mh-e))
(put 'mh-faces 'custom-loads '(mh-e))
(put 'mh-folder 'custom-loads '(mh-e))
(put 'mh-folder-selection 'custom-loads '(mh-e))
(put 'mh-hooks 'custom-loads '(mh-e))
(put 'mh-identity 'custom-loads '(mh-e))
(put 'mh-inc 'custom-loads '(mh-e))
(put 'mh-junk 'custom-loads '(mh-e))
(put 'mh-letter 'custom-loads '(mh-e))
(put 'mh-ranges 'custom-loads '(mh-e))
(put 'mh-scan-line-formats 'custom-loads '(mh-e mh-scan))
(put 'mh-search 'custom-loads '(mh-e))
(put 'mh-sending-mail 'custom-loads '(mh-e))
(put 'mh-sequences 'custom-loads '(mh-e))
(put 'mh-show 'custom-loads '(mh-e))
(put 'mh-speedbar 'custom-loads '(mh-e))
(put 'mh-thread 'custom-loads '(mh-e))
(put 'mh-tool-bar 'custom-loads '(mh-e))
(put 'midnight 'custom-loads '(midnight))
(put 'mime 'custom-loads '(mailcap mm-bodies mm-encode mm-util rfc1843 smime))
(put 'mime-display 'custom-loads '(flow-fill mm-decode mm-view))
(put 'mime-security 'custom-loads '(gnus-art mm-decode mm-encode mml-sec mml-smime mml2015))
(put 'minibuffer 'custom-loads '(icomplete mb-depth minibuf-eldef savehist))
(put 'mm-url 'custom-loads '(mm-url))
(put 'mode-line 'custom-loads '(time))
(put 'mode-line-faces 'custom-loads '(cus-edit time))
(put 'modula2 'custom-loads '(modula2))
(put 'mouse 'custom-loads '(artist avoid goto-addr msb strokes t-mouse xt-mouse))
(put 'mpc 'custom-loads '(mpc))
(put 'mpuz 'custom-loads '(mpuz))
(put 'msb 'custom-loads '(msb))
(put 'mspools 'custom-loads '(mspools))
(put 'mule 'custom-loads '(descr-text kkc latexenc thai-util))
(put 'multi-isearch 'custom-loads '(misearch))
(put 'multimedia 'custom-loads '(doc-view image-dired mm-decode mpc thumbs))
(put 'net-utils 'custom-loads '(net-utils))
(put 'netrc 'custom-loads '(netrc))
(put 'network 'custom-loads '(gssapi network-stream))
(put 'news 'custom-loads '(binhex canlock gnus message mm-decode spam spam-report supercite uudecode))
(put 'newsticker 'custom-loads '(newst-backend newst-reader newst-ticker))
(put 'newsticker-faces 'custom-loads '(newst-plainview newst-reader))
(put 'newsticker-headline-processing 'custom-loads '(newst-backend))
(put 'newsticker-hooks 'custom-loads '(newst-backend newst-plainview))
(put 'newsticker-miscellaneous 'custom-loads '(newst-backend))
(put 'newsticker-plainview 'custom-loads '(newst-plainview))
(put 'newsticker-plainview-hooks 'custom-loads '(newst-plainview))
(put 'newsticker-reader 'custom-loads '(newst-plainview newst-reader newst-treeview))
(put 'newsticker-retrieval 'custom-loads '(newst-backend))
(put 'newsticker-ticker 'custom-loads '(newst-ticker))
(put 'newsticker-treeview 'custom-loads '(newst-treeview))
(put 'nndiary 'custom-loads '(nndiary))
(put 'nnimap 'custom-loads '(nnimap))
(put 'nnmail 'custom-loads '(nnmail))
(put 'nnmail-duplicate 'custom-loads '(nnmail))
(put 'nnmail-expire 'custom-loads '(nnmail))
(put 'nnmail-files 'custom-loads '(nnmail))
(put 'nnmail-prepare 'custom-loads '(nnmail))
(put 'nnmail-procmail 'custom-loads '(nnmail))
(put 'nnmail-retrieve 'custom-loads '(nnmail))
(put 'nnmail-split 'custom-loads '(nndiary nnmail))
(put 'nnmail-various 'custom-loads '(nnmail))
(put 'nnmairix 'custom-loads '(nnmairix))
(put 'nnrss 'custom-loads '(nnrss))
(put 'nnselect 'custom-loads '(nnselect))
(put 'nntp 'custom-loads '(nntp))
(put 'nroff 'custom-loads '(nroff-mode))
(put 'nsm 'custom-loads '(nsm))
(put 'ntlm 'custom-loads '(ntlm))
(put 'nxml 'custom-loads '(nxml-mode nxml-outln rng-valid))
(put 'nxml-faces 'custom-loads '(nxml-mode nxml-outln))
(put 'octave 'custom-loads '(octave))
(put 'ogonek 'custom-loads '(ogonek))
(put 'opascal 'custom-loads '(opascal))
(put 'org 'custom-loads '(ob-core org org-attach org-capture org-crypt org-entities org-faces org-feed org-footnote org-goto org-id org-indent org-mobile org-mouse org-protocol org-refile org-table org-tempo ox))
(put 'org-agenda 'custom-loads '(org org-agenda org-compat org-duration))
(put 'org-agenda-column-view 'custom-loads '(org-agenda))
(put 'org-agenda-custom-commands 'custom-loads '(org-agenda))
(put 'org-agenda-daily/weekly 'custom-loads '(org org-agenda org-faces))
(put 'org-agenda-export 'custom-loads '(org-agenda))
(put 'org-agenda-line-format 'custom-loads '(org-agenda))
(put 'org-agenda-match-view 'custom-loads '(org-agenda))
(put 'org-agenda-search-view 'custom-loads '(org-agenda))
(put 'org-agenda-skip 'custom-loads '(org org-agenda))
(put 'org-agenda-sorting 'custom-loads '(org-agenda))
(put 'org-agenda-startup 'custom-loads '(org-agenda))
(put 'org-agenda-time-grid 'custom-loads '(org-agenda))
(put 'org-agenda-todo-list 'custom-loads '(org-agenda))
(put 'org-agenda-windows 'custom-loads '(org org-agenda))
(put 'org-appearance 'custom-loads '(org org-faces org-num))
(put 'org-archive 'custom-loads '(org org-archive))
(put 'org-attach 'custom-loads '(org-attach org-attach-git))
(put 'org-babel 'custom-loads '(ob-C ob-R ob-clojure ob-core ob-ditaa ob-exp ob-fortran ob-gnuplot ob-groovy ob-haskell ob-java ob-js ob-julia ob-latex ob-lilypond ob-lisp ob-lua ob-maxima ob-ocaml ob-plantuml ob-python ob-ruby ob-scheme ob-shell ob-tangle org org-src))
(put 'org-babel-tangle 'custom-loads '(ob-tangle))
(put 'org-bbdb 'custom-loads '(ol-bbdb))
(put 'org-bbdb-anniversaries 'custom-loads '(ol-bbdb))
(put 'org-bibtex 'custom-loads '(ol-bibtex))
(put 'org-capture 'custom-loads '(org org-capture org-datetree))
(put 'org-cite 'custom-loads '(oc oc-basic oc-biblatex oc-csl oc-natbib))
(put 'org-clock 'custom-loads '(org-agenda org-clock org-duration))
(put 'org-clocktable 'custom-loads '(org-clock))
(put 'org-crypt 'custom-loads '(org-crypt))
(put 'org-ctags 'custom-loads '(org-ctags))
(put 'org-cycle 'custom-loads '(org org-list))
(put 'org-edit-structure 'custom-loads '(org org-src))
(put 'org-entities 'custom-loads '(org-entities))
(put 'org-export 'custom-loads '(org ox ox-ascii ox-beamer ox-html ox-icalendar ox-koma-letter ox-latex ox-man ox-md ox-odt ox-org ox-publish ox-texinfo))
(put 'org-export-ascii 'custom-loads '(ox-ascii))
(put 'org-export-beamer 'custom-loads '(ox-beamer))
(put 'org-export-general 'custom-loads '(ox))
(put 'org-export-html 'custom-loads '(org-agenda ox-html))
(put 'org-export-icalendar 'custom-loads '(ox-icalendar))
(put 'org-export-koma-letter 'custom-loads '(ox-koma-letter))
(put 'org-export-latex 'custom-loads '(org ox-latex ox-texinfo))
(put 'org-export-man 'custom-loads '(ox-man))
(put 'org-export-md 'custom-loads '(ox-md))
(put 'org-export-odt 'custom-loads '(ox-odt))
(put 'org-export-org 'custom-loads '(ox-org))
(put 'org-export-pdf 'custom-loads '(ox-latex ox-man))
(put 'org-export-publish 'custom-loads '(org-compat ox-publish))
(put 'org-export-texinfo 'custom-loads '(ox-texinfo))
(put 'org-faces 'custom-loads '(org org-faces org-footnote org-habit org-indent org-inlinetask org-table))
(put 'org-feed 'custom-loads '(org-feed))
(put 'org-footnote 'custom-loads '(org-footnote))
(put 'org-gnus 'custom-loads '(ol-gnus))
(put 'org-goto 'custom-loads '(org-goto))
(put 'org-habit 'custom-loads '(org-habit))
(put 'org-id 'custom-loads '(org org-id))
(put 'org-imenu-and-speedbar 'custom-loads '(org-compat))
(put 'org-indent 'custom-loads '(org-indent))
(put 'org-inlinetask 'custom-loads '(org-inlinetask))
(put 'org-keywords 'custom-loads '(org))
(put 'org-latex 'custom-loads '(org))
(put 'org-link 'custom-loads '(ol ol-man org-ctags))
(put 'org-link-follow 'custom-loads '(ol ol-doi ol-mhe org org-keys))
(put 'org-link-store 'custom-loads '(ol ol-gnus org-id))
(put 'org-mobile 'custom-loads '(org-mobile))
(put 'org-mouse 'custom-loads '(org-mouse))
(put 'org-plain-lists 'custom-loads '(org-list))
(put 'org-plot 'custom-loads '(org-plot))
(put 'org-priorities 'custom-loads '(org))
(put 'org-progress 'custom-loads '(org org-clock org-habit org-refile))
(put 'org-properties 'custom-loads '(org org-colview))
(put 'org-protocol 'custom-loads '(org-protocol))
(put 'org-refile 'custom-loads '(org org-refile))
(put 'org-reveal-location 'custom-loads '(org))
(put 'org-sparse-trees 'custom-loads '(org))
(put 'org-startup 'custom-loads '(org org-keys))
(put 'org-structure 'custom-loads '(org org-compat org-inlinetask org-keys org-list))
(put 'org-table 'custom-loads '(org org-table))
(put 'org-table-calculation 'custom-loads '(org-table))
(put 'org-table-editing 'custom-loads '(org-table))
(put 'org-table-import-export 'custom-loads '(org-table))
(put 'org-table-settings 'custom-loads '(org-table))
(put 'org-tags 'custom-loads '(org org-faces))
(put 'org-tempo 'custom-loads '(org-tempo))
(put 'org-time 'custom-loads '(org org-duration org-timer))
(put 'org-todo 'custom-loads '(org org-clock org-faces))
(put 'outlines 'custom-loads '(allout org outline))
(put 'package 'custom-loads '(package package-x))
(put 'pages 'custom-loads '(page-ext))
(put 'pascal 'custom-loads '(pascal))
(put 'password 'custom-loads '(password-cache))
(put 'pcl-cvs 'custom-loads '(log-edit log-view pcvs pcvs-defs pcvs-info pcvs-parse))
(put 'pcmpl-cvs 'custom-loads '(pcmpl-cvs))
(put 'pcmpl-gnu 'custom-loads '(pcmpl-gnu))
(put 'pcmpl-rpm 'custom-loads '(pcmpl-rpm))
(put 'pcmpl-unix 'custom-loads '(pcmpl-unix))
(put 'pcomplete 'custom-loads '(em-cmpl pcmpl-cvs pcmpl-gnu pcmpl-rpm pcmpl-x pcomplete))
(put 'perl 'custom-loads '(perl-mode))
(put 'picture 'custom-loads '(picture))
(put 'plstore 'custom-loads '(plstore))
(put 'pong 'custom-loads '(pong))
(put 'pop3 'custom-loads '(pop3))
(put 'postscript 'custom-loads '(ebnf2ps printing ps-print))
(put 'pp 'custom-loads '(pp))
(put 'printing 'custom-loads '(printing))
(put 'proced 'custom-loads '(proced))
(put 'proced-faces 'custom-loads '(proced))
(put 'processes 'custom-loads '(ansi-color comint compile cus-edit executable flyspell grep gud pcomplete proced rlogin shell socks sql term))
(put 'profiler 'custom-loads '(profiler))
(put 'programming 'custom-loads '(cus-edit))
(put 'project 'custom-loads '(project))
(put 'project-am 'custom-loads '(ede/project-am))
(put 'project-linux 'custom-loads '(ede/linux))
(put 'project-vc 'custom-loads '(project))
(put 'prolog 'custom-loads '(prolog))
(put 'prolog-font-lock 'custom-loads '(prolog))
(put 'prolog-indentation 'custom-loads '(prolog))
(put 'prolog-inferior 'custom-loads '(prolog))
(put 'prolog-keyboard 'custom-loads '(prolog))
(put 'prolog-other 'custom-loads '(prolog))
(put 'ps-print 'custom-loads '(ps-print))
(put 'ps-print-background 'custom-loads '(ps-print))
(put 'ps-print-color 'custom-loads '(ps-print))
(put 'ps-print-face 'custom-loads '(ps-print))
(put 'ps-print-font 'custom-loads '(ps-mule ps-print))
(put 'ps-print-headers 'custom-loads '(ps-print))
(put 'ps-print-horizontal 'custom-loads '(ps-print))
(put 'ps-print-miscellany 'custom-loads '(ps-bdf ps-print))
(put 'ps-print-n-up 'custom-loads '(ps-print))
(put 'ps-print-page 'custom-loads '(ps-print))
(put 'ps-print-printer 'custom-loads '(lpr ps-print))
(put 'ps-print-vertical 'custom-loads '(ps-print))
(put 'ps-print-zebra 'custom-loads '(ps-print))
(put 'pulse 'custom-loads '(pulse))
(put 'python 'custom-loads '(python))
(put 'python-flymake 'custom-loads '(python))
(put 'quail 'custom-loads '(quail))
(put 'quickurl 'custom-loads '(quickurl))
(put 'rcirc 'custom-loads '(rcirc))
(put 'rcirc-faces 'custom-loads '(rcirc))
(put 're-builder 'custom-loads '(re-builder))
(put 'recentf 'custom-loads '(recentf))
(put 'recentf-filters 'custom-loads '(recentf))
(put 'rectangle 'custom-loads '(rect))
(put 'refbib 'custom-loads '(refbib))
(put 'refer 'custom-loads '(refer))
(put 'reftex 'custom-loads '(reftex-vars))
(put 'reftex-citation-support 'custom-loads '(reftex-vars))
(put 'reftex-defining-label-environments 'custom-loads '(reftex-vars))
(put 'reftex-finding-files 'custom-loads '(reftex-vars))
(put 'reftex-fontification-configurations 'custom-loads '(reftex-vars))
(put 'reftex-index-support 'custom-loads '(reftex-vars))
(put 'reftex-label-support 'custom-loads '(reftex-vars))
(put 'reftex-making-and-inserting-labels 'custom-loads '(reftex-vars))
(put 'reftex-miscellaneous-configurations 'custom-loads '(reftex-vars))
(put 'reftex-optimizations-for-large-documents 'custom-loads '(reftex-vars))
(put 'reftex-referencing-labels 'custom-loads '(reftex-vars))
(put 'reftex-table-of-contents-browser 'custom-loads '(reftex-vars))
(put 'reftex-viewing-cross-references 'custom-loads '(reftex-vars))
(put 'relax-ng 'custom-loads '(rng-loc rng-nxml rng-valid))
(put 'remember 'custom-loads '(remember))
(put 'reveal 'custom-loads '(reveal))
(put 'rfc2047 'custom-loads '(rfc2047))
(put 'rlogin 'custom-loads '(rlogin))
(put 'rmail 'custom-loads '(rmail rmail-spam-filter rmailmm))
(put 'rmail-edit 'custom-loads '(rmail rmailedit))
(put 'rmail-files 'custom-loads '(rmail unrmail))
(put 'rmail-headers 'custom-loads '(rmail undigest))
(put 'rmail-mime 'custom-loads '(rmailmm))
(put 'rmail-output 'custom-loads '(rmailout))
(put 'rmail-reply 'custom-loads '(rmail))
(put 'rmail-retrieve 'custom-loads '(rmail))
(put 'rmail-spam-filter 'custom-loads '(rmail-spam-filter))
(put 'rmail-summary 'custom-loads '(rmail rmailsum))
(put 'rst 'custom-loads '(rst))
(put 'rst-adjust 'custom-loads '(rst))
(put 'rst-compile 'custom-loads '(rst))
(put 'rst-faces 'custom-loads '(rst))
(put 'rst-indent 'custom-loads '(rst))
(put 'rst-toc 'custom-loads '(rst))
(put 'ruby 'custom-loads '(ruby-mode))
(put 'ruler-mode 'custom-loads '(ruler-mode))
(put 'save-place 'custom-loads '(saveplace))
(put 'savehist 'custom-loads '(savehist))
(put 'scheme 'custom-loads '(cmuscheme scheme))
(put 'scrolling 'custom-loads '(pixel-scroll))
(put 'semantic 'custom-loads '(semantic semantic/analyze semantic/bovine/c semantic/bovine/el semantic/complete semantic/db semantic/db-mode semantic/decorate/mode semantic/edit semantic/format semantic/grammar semantic/ia semantic/idle semantic/imenu semantic/lex semantic/lex-spp semantic/mru-bookmark semantic/senator semantic/symref semantic/symref/grep semantic/symref/list semantic/util-modes semantic/wisent/wisent))
(put 'semantic-faces 'custom-loads '(semantic/complete semantic/decorate/include semantic/decorate/mode semantic/idle semantic/senator semantic/util-modes srecode/fields))
(put 'semantic-imenu 'custom-loads '(semantic/imenu))
(put 'semantic-modes 'custom-loads '(semantic/decorate/mode semantic/idle semantic/mru-bookmark semantic/util-modes))
(put 'semantic-symref-results-mode 'custom-loads '(semantic/symref/list))
(put 'semanticdb 'custom-loads '(semantic/db semantic/db-ebrowse semantic/db-file semantic/db-find))
(put 'senator 'custom-loads '(semantic/senator))
(put 'sendmail 'custom-loads '(sendmail))
(put 'server 'custom-loads '(server))
(put 'ses 'custom-loads '(ses))
(put 'sgml 'custom-loads '(mhtml-mode sgml-mode))
(put 'sh 'custom-loads '(sh-script))
(put 'sh-indentation 'custom-loads '(sh-script))
(put 'sh-script 'custom-loads '(sh-script))
(put 'shadow 'custom-loads '(shadowfile))
(put 'shell 'custom-loads '(dirtrack shell))
(put 'shell-directories 'custom-loads '(shell))
(put 'shortdoc 'custom-loads '(shortdoc))
(put 'shr 'custom-loads '(shr shr-color))
(put 'shr-color 'custom-loads '(shr-color))
(put 'sieve 'custom-loads '(sieve sieve-mode))
(put 'sieve-manage 'custom-loads '(sieve-manage))
(put 'simula 'custom-loads '(simula))
(put 'smerge 'custom-loads '(smerge-mode))
(put 'smie 'custom-loads '(smie))
(put 'smiley 'custom-loads '(smiley))
(put 'smime 'custom-loads '(smime))
(put 'smtpmail 'custom-loads '(smtpmail))
(put 'snmp 'custom-loads '(snmp-mode))
(put 'so-long 'custom-loads '(so-long))
(put 'soap-client 'custom-loads '(soap-client))
(put 'socks 'custom-loads '(socks))
(put 'solitaire 'custom-loads '(solitaire))
(put 'sort 'custom-loads '(sort))
(put 'spam 'custom-loads '(spam))
(put 'spam-bogofilter 'custom-loads '(spam))
(put 'spam-bsfilter 'custom-loads '(spam))
(put 'spam-crm114 'custom-loads '(spam))
(put 'spam-ifile 'custom-loads '(spam))
(put 'spam-report 'custom-loads '(spam-report))
(put 'spam-spamassassin 'custom-loads '(spam))
(put 'spam-spamoracle 'custom-loads '(spam))
(put 'spam-stat 'custom-loads '(spam-stat))
(put 'speedbar 'custom-loads '(rmail semantic/sb speedbar))
(put 'speedbar-faces 'custom-loads '(speedbar vhdl-mode))
(put 'speedbar-vc 'custom-loads '(speedbar))
(put 'spook 'custom-loads '(spook))
(put 'srecode 'custom-loads '(srecode/cpp srecode/document srecode/expandproto srecode/fields srecode/insert srecode/map srecode/mode srecode/srt-mode))
(put 'srecode-cpp 'custom-loads '(srecode/cpp))
(put 'strokes 'custom-loads '(strokes))
(put 'supercite 'custom-loads '(supercite))
(put 'supercite-attr 'custom-loads '(supercite))
(put 'supercite-cite 'custom-loads '(supercite))
(put 'supercite-frames 'custom-loads '(supercite))
(put 'supercite-hooks 'custom-loads '(supercite))
(put 'tab-line 'custom-loads '(tab-line))
(put 'tab-line-faces 'custom-loads '(tab-line))
(put 'table 'custom-loads '(table))
(put 'table-hooks 'custom-loads '(table))
(put 'tar 'custom-loads '(tar-mode))
(put 'tcl 'custom-loads '(tcl))
(put 'tempo 'custom-loads '(tempo))
(put 'term 'custom-loads '(term))
(put 'testcover 'custom-loads '(testcover))
(put 'tetris 'custom-loads '(tetris))
(put 'tex 'custom-loads '(bibtex reftex-vars tex-mode))
(put 'tex-file 'custom-loads '(tex-mode))
(put 'tex-flymake 'custom-loads '(tex-mode))
(put 'tex-run 'custom-loads '(tex-mode))
(put 'tex-view 'custom-loads '(tex-mode))
(put 'texinfo 'custom-loads '(informat srecode/document texinfo))
(put 'text 'custom-loads '(bib-mode cus-edit delim-col ebnf2ps enriched lpr nroff-mode outline picture printing ps-print refbib refer rng-valid rst table tildify view))
(put 'thread-list 'custom-loads '(thread))
(put 'thumbs 'custom-loads '(thumbs))
(put 'tildify 'custom-loads '(tildify))
(put 'time-stamp 'custom-loads '(time-stamp))
(put 'timeclock 'custom-loads '(timeclock))
(put 'tmm 'custom-loads '(tmm))
(put 'todo 'custom-loads '(todo-mode))
(put 'todo-categories 'custom-loads '(todo-mode))
(put 'todo-display 'custom-loads '(todo-mode))
(put 'todo-edit 'custom-loads '(todo-mode))
(put 'todo-faces 'custom-loads '(todo-mode))
(put 'todo-filtered 'custom-loads '(todo-mode))
(put 'tools 'custom-loads '(add-log calculator check-declare cl-font-lock cl-lib compare-w compile copyright diff diff-mode ebrowse ede ede/linux ede/project-am ediff elide-head emerge etags fileloop flymake gdb-mi glasses grep gud make-mode pcvs-defs project semantic sieve smerge-mode soap-client speedbar srecode tempo vc which-func xref))
(put 'tooltip 'custom-loads '(gud))
(put 'trace 'custom-loads '(trace))
(put 'tramp 'custom-loads '(tramp tramp-adb tramp-cache tramp-cmds tramp-crypt tramp-fuse tramp-gvfs tramp-rclone tramp-sh tramp-smb tramp-sshfs))
(put 'transient 'custom-loads '(transient))
(put 'transient-color-faces 'custom-loads '(transient))
(put 'transient-faces 'custom-loads '(transient))
(put 'tree-widget 'custom-loads '(tree-widget))
(put 'two-column 'custom-loads '(two-column))
(put 'type-break 'custom-loads '(type-break))
(put 'uce 'custom-loads '(uce))
(put 'unix 'custom-loads '(proced rlogin shell))
(put 'url 'custom-loads '(url url-cookie url-gw url-handlers url-history url-irc url-nfs url-queue url-tramp url-vars))
(put 'url-cache 'custom-loads '(url-cache url-vars))
(put 'url-cookie 'custom-loads '(url-cookie))
(put 'url-file 'custom-loads '(url-cache url-cookie url-vars))
(put 'url-gateway 'custom-loads '(url-gw))
(put 'url-hairy 'custom-loads '(url-util url-vars))
(put 'url-history 'custom-loads '(url-history))
(put 'url-mime 'custom-loads '(url-vars))
(put 'uudecode 'custom-loads '(uudecode))
(put 'vc 'custom-loads '(log-edit vc vc-annotate vc-bzr vc-cvs vc-dir vc-dispatcher vc-git vc-hg vc-mtn vc-rcs vc-sccs vc-src vc-svn))
(put 'vc-bzr 'custom-loads '(vc-bzr))
(put 'vc-cvs 'custom-loads '(vc-cvs))
(put 'vc-git 'custom-loads '(vc-git))
(put 'vc-hg 'custom-loads '(vc-hg))
(put 'vc-mtn 'custom-loads '(vc-mtn))
(put 'vc-rcs 'custom-loads '(vc-rcs))
(put 'vc-sccs 'custom-loads '(vc-sccs))
(put 'vc-src 'custom-loads '(vc-src))
(put 'vc-svn 'custom-loads '(vc-svn))
(put 'vcursor 'custom-loads '(vcursor))
(put 'vera 'custom-loads '(vera-mode))
(put 'verilog-mode 'custom-loads '(verilog-mode))
(put 'verilog-mode-actions 'custom-loads '(verilog-mode))
(put 'verilog-mode-auto 'custom-loads '(verilog-mode))
(put 'verilog-mode-indent 'custom-loads '(verilog-mode))
(put 'vhdl 'custom-loads '(vhdl-mode))
(put 'vhdl-beautify 'custom-loads '(vhdl-mode))
(put 'vhdl-comment 'custom-loads '(vhdl-mode))
(put 'vhdl-compile 'custom-loads '(vhdl-mode))
(put 'vhdl-compose 'custom-loads '(vhdl-mode))
(put 'vhdl-header 'custom-loads '(vhdl-mode))
(put 'vhdl-highlight 'custom-loads '(vhdl-mode))
(put 'vhdl-highlight-faces 'custom-loads '(vhdl-mode))
(put 'vhdl-menu 'custom-loads '(vhdl-mode))
(put 'vhdl-misc 'custom-loads '(vhdl-mode))
(put 'vhdl-mode 'custom-loads '(vhdl-mode))
(put 'vhdl-model 'custom-loads '(vhdl-mode))
(put 'vhdl-naming 'custom-loads '(vhdl-mode))
(put 'vhdl-port 'custom-loads '(vhdl-mode))
(put 'vhdl-print 'custom-loads '(vhdl-mode))
(put 'vhdl-project 'custom-loads '(vhdl-mode))
(put 'vhdl-sequential-process 'custom-loads '(vhdl-mode))
(put 'vhdl-speedbar 'custom-loads '(vhdl-mode))
(put 'vhdl-style 'custom-loads '(vhdl-mode))
(put 'vhdl-template 'custom-loads '(vhdl-mode))
(put 'vhdl-testbench 'custom-loads '(vhdl-mode))
(put 'view 'custom-loads '(calendar view))
(put 'viper 'custom-loads '(viper viper-ex viper-init viper-keym viper-macs viper-mous viper-util))
(put 'viper-ex 'custom-loads '(viper-ex))
(put 'viper-highlighting 'custom-loads '(viper-init))
(put 'viper-hooks 'custom-loads '(viper-init))
(put 'viper-misc 'custom-loads '(viper viper-cmd viper-init))
(put 'viper-mouse 'custom-loads '(viper-mous))
(put 'viper-search 'custom-loads '(viper-init))
(put 'w32 'custom-loads '(dos-w32 w32-vars))
(put 'warnings 'custom-loads '(warnings))
(put 'wdired 'custom-loads '(wdired))
(put 'web 'custom-loads '(eww shr))
(put 'webjump 'custom-loads '(webjump))
(put 'which-func 'custom-loads '(which-func))
(put 'whitespace 'custom-loads '(whitespace))
(put 'widget-browse 'custom-loads '(wid-browse))
(put 'widget-button 'custom-loads '(wid-edit))
(put 'widget-documentation 'custom-loads '(wid-edit))
(put 'widget-faces 'custom-loads '(wid-edit))
(put 'widgets 'custom-loads '(tree-widget wid-browse wid-edit xwidget))
(put 'windmove 'custom-loads '(windmove))
(put 'windows 'custom-loads '(follow scroll-all windmove winner))
(put 'winner 'custom-loads '(winner))
(put 'wisent 'custom-loads '(semantic/wisent/comp semantic/wisent/wisent))
(put 'woman 'custom-loads '(woman))
(put 'woman-faces 'custom-loads '(woman))
(put 'woman-formatting 'custom-loads '(woman))
(put 'woman-interface 'custom-loads '(woman))
(put 'world-clock 'custom-loads '(time))
(put 'wp 'custom-loads '(cus-edit))
(put 'xref 'custom-loads '(find-func xref))
(put 'xscheme 'custom-loads '(xscheme))
(put 'xterm 'custom-loads '(xt-mouse))
(put 'xwidget 'custom-loads '(xwidget))

;; The remainder of this file is for handling :version.
;; We provide a minimum of information so that `customize-changed'
;; can do its job.

;; For groups we set `custom-version', `group-documentation' and
;; `custom-tag' (which are shown in the customize buffer), so we
;; don't have to load the file containing the group.

;; This macro is used so we don't modify the information about
;; variables and groups if it's already set. (We don't know when
;; cus-load.el is going to be loaded and at that time some of the
;; files might be loaded and some others might not).
(defmacro custom-put-if-not (symbol propname value)
  `(unless (get ,symbol ,propname)
     (put ,symbol ,propname ,value)))

(custom-put-if-not 'SQL 'custom-version '"20.4")
(custom-put-if-not 'SQL 'group-documentation "Running a SQL interpreter from within Emacs buffers.")
(custom-put-if-not 'align 'custom-version '"21.1")
(custom-put-if-not 'align 'group-documentation "Align text to a specific column, by regexp.")
(custom-put-if-not 'ansi-colors 'custom-version '"21.1")
(custom-put-if-not 'ansi-colors 'group-documentation "Translating SGR control sequences to faces.
This translation effectively colorizes strings and regions based upon
SGR control sequences embedded in the text.  SGR (Select Graphic
Rendition) control sequences are defined in section 8.3.117 of the
ECMA-48 standard (identical to ISO/IEC 6429), which is freely available
at <URL:https://www.ecma-international.org/publications/standards/Ecma-048.htm>
as a PDF file.")
(custom-put-if-not 'auth-source 'custom-version '"23.1")
(custom-put-if-not 'auth-source 'group-documentation "Authentication sources.")
(custom-put-if-not 'auth-source-pass 'custom-version '"27.1")
(custom-put-if-not 'auth-source-pass 'group-documentation "password-store integration within auth-source.")
(custom-put-if-not 'bs 'custom-version '"21.1")
(custom-put-if-not 'bs 'group-documentation "Buffer Selection: Maintaining buffers by buffer menu.")
(custom-put-if-not 'calculator 'custom-version '"21.1")
(custom-put-if-not 'calculator 'group-documentation "Simple Emacs calculator.")
(custom-put-if-not 'checkdoc 'custom-version '"20.3")
(custom-put-if-not 'checkdoc 'group-documentation "Support for doc string checking in Emacs Lisp.")
(custom-put-if-not 'conf 'custom-version '"22.1")
(custom-put-if-not 'conf 'group-documentation "Configuration files.")
(custom-put-if-not 'cperl 'custom-version '"20.3")
(custom-put-if-not 'cperl 'group-documentation "Major mode for editing Perl code.")
(custom-put-if-not 'cua 'custom-version '"22.1")
(custom-put-if-not 'cua 'group-documentation "Emulate CUA key bindings including C-x and C-c.")
(custom-put-if-not 'cwarn 'custom-version '"21.1")
(custom-put-if-not 'cwarn 'group-documentation "Highlight suspicious C and C++ constructions.")
(custom-put-if-not 'dbus 'custom-version '"28.1")
(custom-put-if-not 'dbus 'group-documentation "Elisp bindings for D-Bus.")
(custom-put-if-not 'diff-mode 'custom-version '"21.1")
(custom-put-if-not 'diff-mode 'group-documentation "Major mode for viewing/editing diffs.")
(custom-put-if-not 'doc-view 'custom-version '"22.2")
(custom-put-if-not 'doc-view 'group-documentation "In-buffer viewer for PDF, PostScript, DVI, and DJVU files.")
(custom-put-if-not 'ebnf-displacement 'custom-version '"20")
(custom-put-if-not 'ebnf-displacement 'group-documentation "Displacement customization.")
(custom-put-if-not 'ebnf-displacement 'custom-tag "Displacement")
(custom-put-if-not 'ebnf-except 'custom-version '"20")
(custom-put-if-not 'ebnf-except 'group-documentation "Except customization.")
(custom-put-if-not 'ebnf-except 'custom-tag "Except")
(custom-put-if-not 'ebnf-non-terminal 'custom-version '"20")
(custom-put-if-not 'ebnf-non-terminal 'group-documentation "Non-Terminal customization.")
(custom-put-if-not 'ebnf-non-terminal 'custom-tag "Non-Terminal")
(custom-put-if-not 'ebnf-optimization 'custom-version '"20")
(custom-put-if-not 'ebnf-optimization 'group-documentation "Optimization customization.")
(custom-put-if-not 'ebnf-optimization 'custom-tag "Optimization")
(custom-put-if-not 'ebnf-production 'custom-version '"20")
(custom-put-if-not 'ebnf-production 'group-documentation "Production customization.")
(custom-put-if-not 'ebnf-production 'custom-tag "Production")
(custom-put-if-not 'ebnf-repeat 'custom-version '"20")
(custom-put-if-not 'ebnf-repeat 'group-documentation "Repeat customization.")
(custom-put-if-not 'ebnf-repeat 'custom-tag "Repeat")
(custom-put-if-not 'ebnf-shape 'custom-version '"20")
(custom-put-if-not 'ebnf-shape 'group-documentation "Shapes customization.")
(custom-put-if-not 'ebnf-shape 'custom-tag "Shape")
(custom-put-if-not 'ebnf-special 'custom-version '"20")
(custom-put-if-not 'ebnf-special 'group-documentation "Special customization.")
(custom-put-if-not 'ebnf-special 'custom-tag "Special")
(custom-put-if-not 'ebnf-syntactic 'custom-version '"20")
(custom-put-if-not 'ebnf-syntactic 'group-documentation "Syntactic customization.")
(custom-put-if-not 'ebnf-syntactic 'custom-tag "Syntactic")
(custom-put-if-not 'ebnf-terminal 'custom-version '"20")
(custom-put-if-not 'ebnf-terminal 'group-documentation "Terminal customization.")
(custom-put-if-not 'ebnf-terminal 'custom-tag "Terminal")
(custom-put-if-not 'ebnf2ps 'custom-version '"20")
(custom-put-if-not 'ebnf2ps 'group-documentation "Translate an EBNF to a syntactic chart on PostScript.")
(custom-put-if-not 'electric-help 'custom-version '"21.1")
(custom-put-if-not 'electric-help 'group-documentation "Electric help facility.")
(custom-put-if-not 'elide-head 'custom-version '"21.1")
(custom-put-if-not 'elide-head 'group-documentation "Eliding copyright headers and the like in source files.")
(custom-put-if-not 'emacs-lock 'custom-version '"24.1")
(custom-put-if-not 'emacs-lock 'group-documentation "Emacs-Lock mode.")
(custom-put-if-not 'epa 'custom-version '"23.1")
(custom-put-if-not 'epa 'group-documentation "The EasyPG Assistant.")
(custom-put-if-not 'epa-faces 'custom-version '"23.1")
(custom-put-if-not 'epa-faces 'group-documentation "Faces for epa-mode.")
(custom-put-if-not 'epa-ks 'custom-version '"28.1")
(custom-put-if-not 'epa-ks 'group-documentation "The EasyPG Assistant Keyserver client.")
(custom-put-if-not 'epg 'custom-version '"23.1")
(custom-put-if-not 'epg 'group-documentation "Interface to the GNU Privacy Guard (GnuPG).")
(custom-put-if-not 'epg 'custom-tag "EasyPG")
(custom-put-if-not 'erc-lurker 'custom-version '"24.3")
(custom-put-if-not 'erc-lurker 'group-documentation "Hide specified message types sent by lurkers.")
(custom-put-if-not 'erc-notifications 'custom-version '"24.3")
(custom-put-if-not 'erc-notifications 'group-documentation "Send notifications on PRIVMSG or mentions.")
(custom-put-if-not 'eshell 'custom-version '"21.1")
(custom-put-if-not 'eshell 'group-documentation "Command shell implemented entirely in Emacs Lisp.
It invokes no external processes beyond those requested by the
user, and is intended to be a functional replacement for command
shells such as bash, zsh, rc, 4dos.")
(custom-put-if-not 'etc-authors-mode 'custom-version '"28.1")
(custom-put-if-not 'etc-authors-mode 'group-documentation "Display the \"etc/AUTHORS\" file from the Emacs distribution.")
(custom-put-if-not 'ethiopic 'custom-version '"28.1")
(custom-put-if-not 'ethiopic 'group-documentation "Options for writing Ethiopic.")
(custom-put-if-not 'eudc 'custom-version '"21.1")
(custom-put-if-not 'eudc 'group-documentation "Emacs Unified Directory Client.")
(custom-put-if-not 'eww 'custom-version '"25.1")
(custom-put-if-not 'eww 'group-documentation "Emacs Web Wowser.")
(custom-put-if-not 'filesets 'custom-version '"22.1")
(custom-put-if-not 'filesets 'group-documentation "The fileset swapper.")
(custom-put-if-not 'flymake 'custom-version '"23.1")
(custom-put-if-not 'flymake 'group-documentation "Universal on-the-fly syntax checker.")
(custom-put-if-not 'footnote 'custom-version '"21.1")
(custom-put-if-not 'footnote 'group-documentation "Support for footnotes in mail and news messages.")
(custom-put-if-not 'fortune 'custom-version '"21.1")
(custom-put-if-not 'fortune 'group-documentation "Settings for fortune.")
(custom-put-if-not 'gametree 'custom-version '"20.3")
(custom-put-if-not 'gametree 'group-documentation "Manage game analysis trees in Emacs.")
(custom-put-if-not 'gdb 'custom-version '"23.2")
(custom-put-if-not 'gdb 'group-documentation "GDB graphical interface.")
(custom-put-if-not 'gdb-buffers 'custom-version '"23.2")
(custom-put-if-not 'gdb-buffers 'group-documentation "GDB buffers.")
(custom-put-if-not 'gdb-non-stop 'custom-version '"23.2")
(custom-put-if-not 'gdb-non-stop 'group-documentation "GDB non-stop debugging settings.")
(custom-put-if-not 'generic-x 'custom-version '"20.3")
(custom-put-if-not 'generic-x 'group-documentation "A collection of generic modes.")
(custom-put-if-not 'glasses 'custom-version '"21.1")
(custom-put-if-not 'glasses 'group-documentation "Make unreadable code likeThis(one) readable.")
(custom-put-if-not 'gmm 'custom-version '"22.1")
(custom-put-if-not 'gmm 'group-documentation "Utility functions for Gnus, Message and MML.")
(custom-put-if-not 'gnus-charset 'custom-version '"21.1")
(custom-put-if-not 'gnus-charset 'group-documentation "Group character set issues.")
(custom-put-if-not 'gnus-cloud 'custom-version '"25.1")
(custom-put-if-not 'gnus-cloud 'group-documentation "Syncing Gnus data via IMAP.")
(custom-put-if-not 'gnus-delay 'custom-version '"22.1")
(custom-put-if-not 'gnus-delay 'group-documentation "Arrange for sending postings later.")
(custom-put-if-not 'gnus-diary 'custom-version '"22.1")
(custom-put-if-not 'gnus-diary 'group-documentation "Utilities on top of the nndiary back end for Gnus.")
(custom-put-if-not 'gnus-icalendar 'custom-version '"24.4")
(custom-put-if-not 'gnus-icalendar 'group-documentation "Settings for inline display of iCalendar invitations.")
(custom-put-if-not 'gnus-icalendar-org 'custom-version '"24.4")
(custom-put-if-not 'gnus-icalendar-org 'group-documentation "Settings for Calendar Event gnus/org integration.")
(custom-put-if-not 'gnus-notifications 'custom-version '"24.3")
(custom-put-if-not 'gnus-notifications 'group-documentation "Send notifications on new message in Gnus.")
(custom-put-if-not 'gnus-outlook-deuglify 'custom-version '"22.1")
(custom-put-if-not 'gnus-outlook-deuglify 'group-documentation "Deuglify articles generated by broken user agents like MS Outlook (Express).")
(custom-put-if-not 'gnus-registry 'custom-version '"22.1")
(custom-put-if-not 'gnus-registry 'group-documentation "Article Registry.")
(custom-put-if-not 'gnutls 'custom-version '"24.1")
(custom-put-if-not 'gnutls 'group-documentation "Emacs interface to the GnuTLS library.")
(custom-put-if-not 'gravatar 'custom-version '"24.1")
(custom-put-if-not 'gravatar 'group-documentation "Gravatars.")
(custom-put-if-not 'help-at-pt 'custom-version '"22.1")
(custom-put-if-not 'help-at-pt 'group-documentation "Features for displaying local help.")
(custom-put-if-not 'ibuffer 'custom-version '"22.1")
(custom-put-if-not 'ibuffer 'group-documentation "Advanced replacement for `buffer-menu'.
Ibuffer lets you operate on buffers in a Dired-like way,
with the ability to sort, mark by regular expression,
and filter displayed buffers by various criteria.")
(custom-put-if-not 'ido 'custom-version '"22.1")
(custom-put-if-not 'ido 'group-documentation "Switch between files using substrings.")
(custom-put-if-not 'iimage 'custom-version '"22.1")
(custom-put-if-not 'iimage 'group-documentation "Support for inline images.")
(custom-put-if-not 'imap 'custom-version '"21.1")
(custom-put-if-not 'imap 'group-documentation "Low-level IMAP issues.")
(custom-put-if-not 'inferior-lisp 'custom-version '"22.1")
(custom-put-if-not 'inferior-lisp 'group-documentation "Run an outside Lisp in an Emacs buffer.")
(custom-put-if-not 'kmacro 'custom-version '"22.1")
(custom-put-if-not 'kmacro 'group-documentation "Simplified keyboard macro user interface.")
(custom-put-if-not 'ldap 'custom-version '"21.1")
(custom-put-if-not 'ldap 'group-documentation "Lightweight Directory Access Protocol.")
(custom-put-if-not 'less-css 'custom-version '"26.1")
(custom-put-if-not 'less-css 'group-documentation "Less CSS mode.")
(custom-put-if-not 'log-edit 'custom-version '"21.1")
(custom-put-if-not 'log-edit 'group-documentation "Major mode for editing RCS and CVS commit messages.")
(custom-put-if-not 'ls-lisp 'custom-version '"21.1")
(custom-put-if-not 'ls-lisp 'group-documentation "Emulate the ls program completely in Emacs Lisp.")
(custom-put-if-not 'mail-source 'custom-version '"21.1")
(custom-put-if-not 'mail-source 'group-documentation "The mail-fetching library.")
(custom-put-if-not 'mailcap 'custom-version '"21.1")
(custom-put-if-not 'mailcap 'group-documentation "Definition of viewers for MIME types.")
(custom-put-if-not 'midnight 'custom-version '"20.3")
(custom-put-if-not 'midnight 'group-documentation "Run something every day at midnight.")
(custom-put-if-not 'mime-display 'custom-version '"21.1")
(custom-put-if-not 'mime-display 'group-documentation "Display of MIME in mail and news articles.")
(custom-put-if-not 'multi-isearch 'custom-version '"23.1")
(custom-put-if-not 'multi-isearch 'group-documentation "Using isearch to search through multiple buffers.")
(custom-put-if-not 'net-utils 'custom-version '"20.3")
(custom-put-if-not 'net-utils 'group-documentation "Network utility functions.")
(custom-put-if-not 'nndiary 'custom-version '"22.1")
(custom-put-if-not 'nndiary 'group-documentation "The Gnus Diary back end.")
(custom-put-if-not 'nsm 'custom-version '"25.1")
(custom-put-if-not 'nsm 'group-documentation "Network Security Manager.")
(custom-put-if-not 'ntlm 'custom-version '"25.1")
(custom-put-if-not 'ntlm 'group-documentation "NTLM (NT LanManager) authentication.")
(custom-put-if-not 'opascal 'custom-version '"24.4")
(custom-put-if-not 'opascal 'group-documentation "Major mode for editing OPascal source in Emacs.")
(custom-put-if-not 'org-export-beamer 'custom-version '"24.2")
(custom-put-if-not 'org-export-beamer 'group-documentation "Options specific for using the beamer class in LaTeX export.")
(custom-put-if-not 'org-export-beamer 'custom-tag "Org Beamer")
(custom-put-if-not 'org-export-md 'custom-version '"24.4")
(custom-put-if-not 'org-export-md 'group-documentation "Options specific to Markdown export back-end.")
(custom-put-if-not 'org-export-md 'custom-tag "Org Markdown")
(custom-put-if-not 'org-export-org 'custom-version '"24.4")
(custom-put-if-not 'org-export-org 'group-documentation "Options for exporting Org mode files to Org.")
(custom-put-if-not 'org-export-org 'custom-tag "Org Export Org")
(custom-put-if-not 'org-export-texinfo 'custom-version '"24.4")
(custom-put-if-not 'org-export-texinfo 'group-documentation "Options for exporting Org mode files to Texinfo.")
(custom-put-if-not 'org-export-texinfo 'custom-tag "Org Export Texinfo")
(custom-put-if-not 'org-protocol 'custom-version '"22.1")
(custom-put-if-not 'org-protocol 'group-documentation "Intercept calls from emacsclient to trigger custom actions.

This is done by advising `server-visit-files' to scan the list of filenames
for `org-protocol-the-protocol' and sub-protocols defined in
`org-protocol-protocol-alist' and `org-protocol-protocol-alist-default'.")
(custom-put-if-not 'package 'custom-version '"24.1")
(custom-put-if-not 'package 'group-documentation "Manager for Emacs Lisp packages.")
(custom-put-if-not 'pcl-cvs 'custom-version '"21.1")
(custom-put-if-not 'pcl-cvs 'group-documentation "Special support for the CVS versioning system.")
(custom-put-if-not 'pcomplete 'custom-version '"21.1")
(custom-put-if-not 'pcomplete 'group-documentation "Programmable completion.")
(custom-put-if-not 'plstore 'custom-version '"24.1")
(custom-put-if-not 'plstore 'group-documentation "Searchable, partially encrypted, persistent plist store.")
(custom-put-if-not 'postscript 'custom-version '"20")
(custom-put-if-not 'postscript 'group-documentation "Printing with PostScript.")
(custom-put-if-not 'postscript 'custom-tag "PostScript")
(custom-put-if-not 'printing 'custom-version '"22.1")
(custom-put-if-not 'printing 'group-documentation "Printing Utilities group.")
(custom-put-if-not 'printing 'custom-tag "Printing Utilities")
(custom-put-if-not 'profiler 'custom-version '"24.3")
(custom-put-if-not 'profiler 'group-documentation "Emacs profiler.")
(custom-put-if-not 'project 'custom-version '"28.1")
(custom-put-if-not 'project 'group-documentation "Operations on the current project.")
(custom-put-if-not 'project-linux 'custom-version '"24.3")
(custom-put-if-not 'project-linux 'group-documentation "File and tag browser frame.")
(custom-put-if-not 'project-vc 'custom-version '"25.1")
(custom-put-if-not 'project-vc 'group-documentation "Project implementation based on the VC package.")
(custom-put-if-not 'ps-print 'custom-version '"20")
(custom-put-if-not 'ps-print 'group-documentation "PostScript generator for Emacs.")
(custom-put-if-not 'ps-print-background 'custom-version '"20")
(custom-put-if-not 'ps-print-background 'group-documentation "Background customization.")
(custom-put-if-not 'ps-print-background 'custom-tag "Background")
(custom-put-if-not 'ps-print-color 'custom-version '"20")
(custom-put-if-not 'ps-print-color 'group-documentation "Color customization.")
(custom-put-if-not 'ps-print-color 'custom-tag "Color")
(custom-put-if-not 'ps-print-face 'custom-version '"20")
(custom-put-if-not 'ps-print-face 'group-documentation "Faces customization.")
(custom-put-if-not 'ps-print-face 'custom-tag "PS Faces")
(custom-put-if-not 'ps-print-font 'custom-version '"20")
(custom-put-if-not 'ps-print-font 'group-documentation "Fonts customization.")
(custom-put-if-not 'ps-print-font 'custom-tag "Font")
(custom-put-if-not 'ps-print-headers 'custom-version '"20")
(custom-put-if-not 'ps-print-headers 'group-documentation "Headers & footers layout.")
(custom-put-if-not 'ps-print-headers 'custom-tag "Header & Footer")
(custom-put-if-not 'ps-print-horizontal 'custom-version '"20")
(custom-put-if-not 'ps-print-horizontal 'group-documentation "Horizontal page layout.")
(custom-put-if-not 'ps-print-horizontal 'custom-tag "Horizontal")
(custom-put-if-not 'ps-print-miscellany 'custom-version '"20")
(custom-put-if-not 'ps-print-miscellany 'group-documentation "Miscellany customization.")
(custom-put-if-not 'ps-print-miscellany 'custom-tag "Miscellany")
(custom-put-if-not 'ps-print-n-up 'custom-version '"20")
(custom-put-if-not 'ps-print-n-up 'group-documentation "N-up customization.")
(custom-put-if-not 'ps-print-n-up 'custom-tag "N-Up")
(custom-put-if-not 'ps-print-page 'custom-version '"20")
(custom-put-if-not 'ps-print-page 'group-documentation "Page customization.")
(custom-put-if-not 'ps-print-page 'custom-tag "Page")
(custom-put-if-not 'ps-print-printer 'custom-version '"20")
(custom-put-if-not 'ps-print-printer 'group-documentation "Printer customization.")
(custom-put-if-not 'ps-print-printer 'custom-tag "Printer")
(custom-put-if-not 'ps-print-vertical 'custom-version '"20")
(custom-put-if-not 'ps-print-vertical 'group-documentation "Vertical page layout.")
(custom-put-if-not 'ps-print-vertical 'custom-tag "Vertical")
(custom-put-if-not 'ps-print-zebra 'custom-version '"20")
(custom-put-if-not 'ps-print-zebra 'group-documentation "Zebra customization.")
(custom-put-if-not 'ps-print-zebra 'custom-tag "Zebra")
(custom-put-if-not 'python 'custom-version '"24.3")
(custom-put-if-not 'python 'group-documentation "Python Language's flying circus support for Emacs.")
(custom-put-if-not 'python-flymake 'custom-version '"26.1")
(custom-put-if-not 'python-flymake 'group-documentation "Integration between Python and Flymake.")
(custom-put-if-not 'quickurl 'custom-version '"21.1")
(custom-put-if-not 'quickurl 'group-documentation "Insert a URL based on text at point in buffer.")
(custom-put-if-not 'rcirc 'custom-version '"22.1")
(custom-put-if-not 'rcirc 'group-documentation "Simple IRC client.")
(custom-put-if-not 'recentf 'custom-version '"21.1")
(custom-put-if-not 'recentf 'group-documentation "Maintain a menu of recently opened files.")
(custom-put-if-not 'rectangle 'custom-version '"25.1")
(custom-put-if-not 'rectangle 'group-documentation "Operations on rectangles.")
(custom-put-if-not 'rst 'custom-version '"23.1")
(custom-put-if-not 'rst 'group-documentation "Support for reStructuredText documents.")
(custom-put-if-not 'rst-adjust 'custom-version '"21.1")
(custom-put-if-not 'rst-adjust 'group-documentation "Settings for adjustment and cycling of section title adornments.")
(custom-put-if-not 'rst-compile 'custom-version '"21.1")
(custom-put-if-not 'rst-compile 'group-documentation "Settings for support of conversion of reStructuredText
document with \\[rst-compile].")
(custom-put-if-not 'rst-faces 'custom-version '"21.1")
(custom-put-if-not 'rst-faces 'group-documentation "Faces used in Rst Mode.")
(custom-put-if-not 'rst-toc 'custom-version '"21.1")
(custom-put-if-not 'rst-toc 'group-documentation "Settings for reStructuredText table of contents.")
(custom-put-if-not 'ruler-mode 'custom-version '"22.1")
(custom-put-if-not 'ruler-mode 'group-documentation "Display a ruler in the header line.")
(custom-put-if-not 'savehist 'custom-version '"22.1")
(custom-put-if-not 'savehist 'group-documentation "Save minibuffer history.")
(custom-put-if-not 'ses 'custom-version '"21.1")
(custom-put-if-not 'ses 'group-documentation "Simple Emacs Spreadsheet.")
(custom-put-if-not 'ses 'custom-tag "SES")
(custom-put-if-not 'shr 'custom-version '"25.1")
(custom-put-if-not 'shr 'group-documentation "Simple HTML Renderer.")
(custom-put-if-not 'sieve 'custom-version '"22.1")
(custom-put-if-not 'sieve 'group-documentation "Manage sieve scripts.")
(custom-put-if-not 'snmp 'custom-version '"20.4")
(custom-put-if-not 'snmp 'group-documentation "Mode for editing SNMP MIB files.")
(custom-put-if-not 'soap-client 'custom-version '"24.1")
(custom-put-if-not 'soap-client 'group-documentation "Access SOAP web services from Emacs.")
(custom-put-if-not 'socks 'custom-version '"22.2")
(custom-put-if-not 'socks 'group-documentation "SOCKS support.")
(custom-put-if-not 'spam-stat 'custom-version '"22.1")
(custom-put-if-not 'spam-stat 'group-documentation "Statistical spam detection for Emacs.
Use the functions to build a dictionary of words and their statistical
distribution in spam and non-spam mails.  Then use a function to determine
whether a buffer contains spam or not.")
(custom-put-if-not 'tab-line-faces 'custom-version '"27.1")
(custom-put-if-not 'tab-line-faces 'group-documentation "Faces used in the tab line.")
(custom-put-if-not 'table 'custom-version '"22.1")
(custom-put-if-not 'table 'group-documentation "Text based table manipulation utilities.")
(custom-put-if-not 'table 'custom-tag "Table")
(custom-put-if-not 'testcover 'custom-version '"21.1")
(custom-put-if-not 'testcover 'group-documentation "Code-coverage tester.")
(custom-put-if-not 'thumbs 'custom-version '"22.1")
(custom-put-if-not 'thumbs 'group-documentation "Thumbnails previewer.")
(custom-put-if-not 'tildify 'custom-version '"21.1")
(custom-put-if-not 'tildify 'group-documentation "Add hard spaces or other text fragments to text buffers.")
(custom-put-if-not 'todo 'custom-version '"24.4")
(custom-put-if-not 'todo 'group-documentation "Create and maintain categorized lists of todo items.")
(custom-put-if-not 'todo-categories 'custom-version '"24.4")
(custom-put-if-not 'todo-categories 'group-documentation "User options for Todo Categories mode.")
(custom-put-if-not 'todo-display 'custom-version '"24.4")
(custom-put-if-not 'todo-display 'group-documentation "User display options for Todo mode.")
(custom-put-if-not 'todo-edit 'custom-version '"24.4")
(custom-put-if-not 'todo-edit 'group-documentation "User options for adding and editing todo items.")
(custom-put-if-not 'todo-faces 'custom-version '"24.4")
(custom-put-if-not 'todo-faces 'group-documentation "Faces for the Todo modes.")
(custom-put-if-not 'todo-filtered 'custom-version '"24.4")
(custom-put-if-not 'todo-filtered 'group-documentation "User options for Todo Filter Items mode.")
(custom-put-if-not 'tramp 'custom-version '"22.1")
(custom-put-if-not 'tramp 'group-documentation "Edit remote files with a combination of ssh, scp, etc.")
(custom-put-if-not 'tree-widget 'custom-version '"22.1")
(custom-put-if-not 'tree-widget 'group-documentation "Customization support for the Tree Widget library.")
(custom-put-if-not 'url 'custom-version '"22.1")
(custom-put-if-not 'url 'group-documentation "Uniform Resource Locator tool.")
(custom-put-if-not 'vc-bzr 'custom-version '"22.2")
(custom-put-if-not 'vc-bzr 'group-documentation "VC Bazaar (bzr) backend.")
(custom-put-if-not 'vc-cvs 'custom-version '"24.1")
(custom-put-if-not 'vc-cvs 'group-documentation "VC CVS backend.")
(custom-put-if-not 'vc-git 'custom-version '"24.1")
(custom-put-if-not 'vc-git 'group-documentation "VC Git backend.")
(custom-put-if-not 'vc-hg 'custom-version '"24.1")
(custom-put-if-not 'vc-hg 'group-documentation "VC Mercurial (hg) backend.")
(custom-put-if-not 'vc-mtn 'custom-version '"24.1")
(custom-put-if-not 'vc-mtn 'group-documentation "VC Monotone (mtn) backend.")
(custom-put-if-not 'vc-rcs 'custom-version '"24.1")
(custom-put-if-not 'vc-rcs 'group-documentation "VC RCS backend.")
(custom-put-if-not 'vc-sccs 'custom-version '"24.1")
(custom-put-if-not 'vc-sccs 'group-documentation "VC SCCS backend.")
(custom-put-if-not 'vc-src 'custom-version '"25.1")
(custom-put-if-not 'vc-src 'group-documentation "VC SRC backend.")
(custom-put-if-not 'vc-svn 'custom-version '"24.1")
(custom-put-if-not 'vc-svn 'group-documentation "VC Subversion (svn) backend.")
(custom-put-if-not 'vera 'custom-version '"22.2")
(custom-put-if-not 'vera 'group-documentation "Customizations for Vera Mode.")
(custom-put-if-not 'verilog-mode 'custom-version '"22.2")
(custom-put-if-not 'verilog-mode 'group-documentation "Major mode for Verilog source code.")
(custom-put-if-not 'w32 'custom-version '"22.1")
(custom-put-if-not 'w32 'group-documentation "MS-Windows specific features.")
(custom-put-if-not 'warnings 'custom-version '"22.1")
(custom-put-if-not 'warnings 'group-documentation "Log and display warnings.")
(custom-put-if-not 'whitespace 'custom-version '"23.1")
(custom-put-if-not 'whitespace 'group-documentation "Visualize blanks (TAB, (HARD) SPACE and NEWLINE).")
(custom-put-if-not 'windmove 'custom-version '"21.1")
(custom-put-if-not 'windmove 'group-documentation "Directional selection of windows in a frame.")
(custom-put-if-not 'xref 'custom-version '"25.1")
(custom-put-if-not 'xref 'group-documentation "Cross-referencing commands.")

(defvar custom-versions-load-alist '(("19.29" time-stamp) ("20" ps-print ebnf2ps) ("20.1" time-stamp) ("20.3" compile xscheme find-func mailabbrev dabbrev msb uce vcursor debug add-log cus-edit ffap hexl diary-lib avoid rmail which-func) ("20.3.3" dos-vars) ("20.4" sh-script hilit-chg compile) ("20.8" sql) ("21.1" ezimage gnus-start speedbar debug sgml-mode cal-hebrew wid-edit fortran strokes latin1-disp dabbrev net-utils etags message nnmail cperl-mode smtpmail cus-edit gnus-agent find-func ps-print server browse-url rmailedit flyspell vc-rcs vc-cvs gnus-art hideshow rmail sendmail vc ange-ftp gnus-group add-log gnus-sum vc-sccs) ("21.3" sql gnus-agent ange-ftp) ("22" ps-print ebnf2ps) ("22.1" binhex vc comint facemenu mail-extr hi-lock dabbrev ielm descr-text uudecode hl-line find-func calendar mm-view diff-mode sql add-log time sh-script glasses gnus-int imap latin1-disp mail-source sendmail gnus-delay cus-edit make-mode vc-svn spam mml-sec view imenu pop3 ispell ange-ftp mml2015 compare-w deuglify locate mm-uu mml grep cal-tex mm-util gnus-score smime shadowfile flow-fill ffap gnus-msg org-faces autorevert vc-cvs bookmark gnus-cite keypad gnus-util gnus-win diary-lib server compile gdb-mi gnus-art fortran gnus-srvr tex-mode cal-dst warnings rmail mm-url dired gnus tcl allout message gnus-start info gnus-fun gnus-agent mm-decode gnus-group gnus-sum sgml-mode desktop nnmail) ("22.2" bibtex-style sql mail-source vc-mtn gdb-mi find-dired gnus-sum css-mode vc-hg dired desktop) ("22.3" message) ("23.1" gnus-bookmark allout fortune gnus-util dired-aux smiley imap checkdoc informat face-remap vc-git nnmail hideif pop3 fortran rmailmm vc-hg mm-decode gnus-draft pcmpl-unix misearch gnus-msg smime f90 gnus-art cus-edit copyright rmail compile ffap time sendmail mm-uu server vc-mtn info woman bibtex browse-url vc-cvs filesets gnus-group descr-text gdb-mi spam-report mml holidays tex-mode gnus-dired gnus calendar nnmairix epa-mail view message gnus-sum gnus-score) ("23.2" desktop bytecomp calendar rmailmm rmail ansi-color tramp-gvfs mm-encode comint lunar diary-lib doc-view elint message gnus-group help-fns auth-source gdb-mi dired gnus-sum) ("23.3" rmail diary-lib rmailsum calendar desktop) ("23.4" ede) ("24.1" pcmpl-unix package-x glasses ange-ftp esh-cmd ob-R erc-button esh-util em-banner find-dired gssapi mml calendar ibuffer copyright gnus-art etags gnus-picon ob-exp org-crypt facemenu em-smart em-rebind woman doc-view diary-lib tramp esh-arg em-glob esh-proc em-pred em-cmpl em-term em-dirs em-hist em-unix gnus-registry battery sieve-manage mml2015 dirtrack rmail cus-edit ob-plantuml ob-js ob-ditaa f90 elec-pair auth-source info erc-join org-entities org-inlinetask erc-backend gnus-group vc vc-sccs gnus-msg gnus esh-var org-keys sendmail vc-svn em-ls smtpmail cc-fonts em-alias log-edit bibtex gnus-sum ox-icalendar js cus-theme smiley org-mobile ob-core vc-cvs appt mm-view gnus-int package vc-bzr allout saveplace cc-guess arc-mode esh-ext vc-git man ob-lisp gnus-html server shr flyspell org-refile esh-io org-faces gnus-util dired-x org-capture message sql pop3 url-queue ido calc ses gnus-srvr cc-vars rcirc compile esh-mode em-script url-cache gnus-start vc-rcs hl-line org-habit emacs-lock em-prompt verilog-mode ob-tangle rst org-archive netrc org-attach allout-widgets cl-indent gnus-gravatar org-ctags feedmail ox-odt prolog org-clock ol-bibtex org-list org-table image-mode browse-url ol org org-agenda gnus-search) ("24.3" server sh-script erc-backend org-capture cus-edit ob-julia ob-groovy message hexl icalendar calendar ox-odt minibuf-eldef org-datetree wdired gnus-picon ob-C which-func ido org org-id gdb-mi flymake debug calc tramp avoid gnus-msg perl-mode diff-mode ediff-wind pcmpl-gnu semantic/complete sql proced vhdl-mode erc-match ffap emacs-lock compile tramp-smb ol-doi rcirc em-term verilog-mode org-agenda cal-html man nnmail apropos pcmpl-rpm smerge-mode allout reftex-vars) ("24.4" m4-mode mml-smime man sql verilog-mode vc-svn imenu org-protocol reftex-vars tramp-smb ansi-color term org-attach-git smie js info-xref ob-lilypond flymake-proc epa tramp-adb bibtex strokes unrmail f90 hi-lock gnus-sum shr ol-gnus org-archive org-clock apropos saveplace package ob-ditaa gnus tramp-cache recentf gnus-start ob-ocaml autorevert em-term gdb-mi message idlwave type-break timeclock find-file calendar desktop cfengine sh-script gnutls quickurl ede/linux pcmpl-x org elec-pair compare-w log-edit dired org-src calc ido ob-python vhdl-mode rmail ruby-mode python ox-man ox-latex nnimap org-faces ox-html eww icomplete flymake ox-beamer mm-util org-mobile octave mml2015 ob-core info sieve-manage remember cookie1 pop3 ox rlogin flyspell tramp ox-odt doc-view org-agenda ob-ruby ox-ascii ox-texinfo) ("24.5" vc-hg erc-stamp mml2015 flyspell erc) ("25.1" diff-mode erc vc-hg checkdoc sgml-mode xt-mouse vc-mtn ldap info find-func check-declare gud newst-treeview url-tramp vc-cvs erc-desktop-notifications tramp-adb whitespace epg-config mm-decode gnus-sum vhdl-mode tex-mode gdb-mi cl-indent sh-script hideif vc mml-sec calendar shr gnus-registry vc-annotate verilog-mode eudc-vars newst-reader ls-lisp sql filecache browse-url package vc-git url-handlers gnus-art arc-mode rmailmm vc-bzr nsm compare-w rcirc python em-term js gnus-fun eww vc-svn rect icalendar tildify net-utils) ("25.2" ffap tramp-sh) ("26.1" ob-scheme ol-bbdb quickurl debug ob-core ob-exp org-faces org-duration cpp dired ox-md message perl-mode org-keys org-attach-git gnus-cloud tex-mode package edebug icomplete gnus-search executable url-vars dunnet flyspell ediff-init pixel-scroll org-src shr ruby-mode ol-bibtex sieve-manage enriched gnus-art ox-publish ox-odt ob-lisp ox-ascii vc-git dired-x tramp epa grep mhtml-mode bytecomp js org-colview ange-ftp erc dns-mode gnus-mh browse-url sql ox-beamer display-line-numbers net-utils cc-vars term ox-html mailcap vc-hg css-mode flymake ibuf-ext wdired add-log org-timer python comint org-table man gdb-mi org ox-latex org-agenda ibuffer ob-lua ox org-clock checkdoc org-attach image-dired ox-texinfo) ("26.2" shadowfile imenu calc mail-source) ("26.3" help-fns) ("27.1" esh-mode sendmail vc-hg dired-aux cua-base flymake flymake-cc ox-texinfo ido url-vars gnus-win windmove edebug nxml-mode gnus-sum gud arc-mode image-converter server erc tramp-sh epg-config gnutls bytecomp vc-dispatcher dired project flyspell tree-widget time-stamp remember verilog-mode hideif backtrace add-log flymake-proc vc-git rmailout eww man network-stream auth-source rcirc js compile thread tramp-cmds gnus-async xref shr package char-fold nsm org-agenda autoinsert display-fill-column-indicator erc-button message diff-mode em-term bibtex bookmark pcmpl-gnu tex-mode footnote cc-vars tramp-rclone image-mode tar-mode auth-source-pass vc org comint browse-url smtpmail doc-view autorevert python mm-uu cus-edit tab-line nnmail hi-lock term winner gnus-art find-dired grep mm-decode sql tramp gravatar) ("27.2" ox-html) ("28.0" verilog-mode) ("28.1" browse-url erc-services imenu ido reveal comint reftex-vars arc-mode perl-mode log-view vc-hg ffap goto-addr autoinsert epa-mail bookmark find-func smiley windmove life tramp-gvfs tramp-smb icomplete gnus etags tramp-sshfs js rmail nnimap grep info newst-treeview texinfo calc erc apropos gnus-registry nnselect bibtex battery hideshow compile vc-git calendar "epa-ks" tramp-adb mpc ethio-util help-fns time gnus-art python display-line-numbers diff-mode shortdoc image-dired tramp-fuse xref erc-button etc-authors-mode epa bug-reference gnus-topic hideif remember which-func smtpmail auth-source cl-indent mb-depth gnus-sum repeat rcirc tramp-crypt tramp-sh shell flyspell ansi-color eww project thumbs saveplace dired-aux term dired shr ispell tramp xwidget package server message dictionary gdb-mi vc-dir outline comp bytecomp checkdoc tab-line cal-dst gnus-search))
  "For internal use by custom.
This is an alist whose members have as car a version string, and as
elements the files that have variables or faces that contain that
version.  These files should be loaded before showing the customization
buffer that `customize-changed' generates.")


(provide 'cus-load)
;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; coding: utf-8
;; End:
;;; cus-load.el ends here
